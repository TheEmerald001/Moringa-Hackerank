[{"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/index.js":"1","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/App.js":"2","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/store.js":"3","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/NewAssessment.js":"4","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/SendMail.js":"5","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/CreateQuiz.js":"6","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/quizSlice.js":"7","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/contactSlice.js":"8","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Assesments.js":"9","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Home.js":"10","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/TmHome.js":"11","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/List.js":"12","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Assignment.js":"13","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/QuizPage.js":"14","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/StudentDashboard.js":"15","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Single.js":"16","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/CombineLogin.js":"17","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/signup/Register.js":"18","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/login/Login.js":"19","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Sidebar.js":"20","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Quiz.js":"21","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Kata.js":"22","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Subjective.js":"23","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/apiCall.js":"24","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/assessmentSlice.js":"25","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Navbar.js":"26","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Footer.js":"27","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/DataTable.js":"28","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/StudentSideBar.js":"29","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Question.js":"30","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/AnswerTable.js":"31","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/requestMethods.js":"32","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/data.js":"33","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js":"34","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/auth.js":"35","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/dataTableSource.js":"36","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/answer/Answer.js":"37","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/mentorSlice.js":"38","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/studentSlice.js":"39","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/New.js":"40","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/SingleAssessment.js":"41","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/StudentAttempt.js":"42","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js":"43","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/StudentAssignment.js":"44","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Trial.js":"45","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/createFormSource.js":"46","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/loginSource.js":"47","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/registerSource.js":"48","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Assessments.js":"49","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/attemptsSource.js":"50","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Skata.js":"51","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Squiz.js":"52","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Test.js":"53","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Spros.js":"54","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/SingleAssessmentSidebar.js":"55","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/AssessmentDataTable.js":"56"},{"size":463,"mtime":1667311495479,"results":"57","hashOfConfig":"58"},{"size":4546,"mtime":1667315200669,"results":"59","hashOfConfig":"58"},{"size":1088,"mtime":1667311496189,"results":"60","hashOfConfig":"58"},{"size":4370,"mtime":1667311495289,"results":"61","hashOfConfig":"58"},{"size":2026,"mtime":1666802664790,"results":"62","hashOfConfig":"58"},{"size":5387,"mtime":1667311494929,"results":"63","hashOfConfig":"58"},{"size":1708,"mtime":1667311496139,"results":"64","hashOfConfig":"58"},{"size":872,"mtime":1667311496079,"results":"65","hashOfConfig":"58"},{"size":3020,"mtime":1667311495479,"results":"66","hashOfConfig":"58"},{"size":2821,"mtime":1667311495579,"results":"67","hashOfConfig":"58"},{"size":830,"mtime":1667311495769,"results":"68","hashOfConfig":"58"},{"size":747,"mtime":1667311495579,"results":"69","hashOfConfig":"58"},{"size":4454,"mtime":1667311495479,"results":"70","hashOfConfig":"58"},{"size":2324,"mtime":1667311495679,"results":"71","hashOfConfig":"58"},{"size":3612,"mtime":1667313695779,"results":"72","hashOfConfig":"58"},{"size":3552,"mtime":1667311495679,"results":"73","hashOfConfig":"58"},{"size":2748,"mtime":1667311495579,"results":"74","hashOfConfig":"58"},{"size":2600,"mtime":1667322484882,"results":"75","hashOfConfig":"58"},{"size":1625,"mtime":1667312505679,"results":"76","hashOfConfig":"58"},{"size":2070,"mtime":1667311495349,"results":"77","hashOfConfig":"58"},{"size":2931,"mtime":1667311495299,"results":"78","hashOfConfig":"58"},{"size":1673,"mtime":1667311494969,"results":"79","hashOfConfig":"58"},{"size":1694,"mtime":1667311495399,"results":"80","hashOfConfig":"58"},{"size":2542,"mtime":1667311495919,"results":"81","hashOfConfig":"58"},{"size":1678,"mtime":1667311495979,"results":"82","hashOfConfig":"58"},{"size":2570,"mtime":1667311495069,"results":"83","hashOfConfig":"58"},{"size":398,"mtime":1666802664510,"results":"84","hashOfConfig":"58"},{"size":2189,"mtime":1667311494969,"results":"85","hashOfConfig":"58"},{"size":2117,"mtime":1667311495399,"results":"86","hashOfConfig":"58"},{"size":2033,"mtime":1666802664720,"results":"87","hashOfConfig":"58"},{"size":3549,"mtime":1667311494849,"results":"88","hashOfConfig":"58"},{"size":404,"mtime":1667052201785,"results":"89","hashOfConfig":"58"},{"size":1837,"mtime":1666802664350,"results":"90","hashOfConfig":"58"},{"size":281,"mtime":1667311494789,"results":"91","hashOfConfig":"58"},{"size":149,"mtime":1667052201785,"results":"92","hashOfConfig":"58"},{"size":2131,"mtime":1667311494719,"results":"93","hashOfConfig":"58"},{"size":584,"mtime":1666802665190,"results":"94","hashOfConfig":"58"},{"size":807,"mtime":1667311496079,"results":"95","hashOfConfig":"58"},{"size":820,"mtime":1667311496189,"results":"96","hashOfConfig":"58"},{"size":3693,"mtime":1667311495069,"results":"97","hashOfConfig":"58"},{"size":4002,"mtime":1667311495679,"results":"98","hashOfConfig":"58"},{"size":4523,"mtime":1667311495689,"results":"99","hashOfConfig":"58"},{"size":750,"mtime":1667311494569,"results":"100","hashOfConfig":"58"},{"size":1317,"mtime":1667311495689,"results":"101","hashOfConfig":"58"},{"size":288,"mtime":1667311495769,"results":"102","hashOfConfig":"58"},{"size":748,"mtime":1667311494569,"results":"103","hashOfConfig":"58"},{"size":426,"mtime":1667311494719,"results":"104","hashOfConfig":"58"},{"size":982,"mtime":1667311494719,"results":"105","hashOfConfig":"58"},{"size":858,"mtime":1667311495479,"results":"106","hashOfConfig":"58"},{"size":727,"mtime":1667311494569,"results":"107","hashOfConfig":"58"},{"size":753,"mtime":1667311495379,"results":"108","hashOfConfig":"58"},{"size":206,"mtime":1667311495379,"results":"109","hashOfConfig":"58"},{"size":444,"mtime":1667311495689,"results":"110","hashOfConfig":"58"},{"size":537,"mtime":1667311495379,"results":"111","hashOfConfig":"58"},{"size":1287,"mtime":1667311495379,"results":"112","hashOfConfig":"58"},{"size":4995,"mtime":1667311494849,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1yepj84",{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"127"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"116"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"116"},"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/index.js",[],["242","243"],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/App.js",["244"],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Assessments from \"../pages/Assessments\";\nimport Home from \"../pages/Home\";\nimport TmHome from \"../pages/TmHome\";\nimport NewAssessment from \"./NewAssessment\";\n\nimport List from \"../pages/List\";\nimport Assignment from \"../pages/Assignment\";\nimport Register from \"../pages/signup/Register\";\nimport Login from \"../pages/login/Login\";\n\nimport QuizPage from \"../pages/QuizPage\";\nimport StudentDashboard from \"../pages/StudentDashboard\";\nimport {\n  assessmentColumns,\n  assessmentRows,\n} from \"../Helpers/assessmentDataTableSource\";\nimport { attemptColumns, attemptRows } from \"../Helpers/attemptsSource\";\nimport Single from \"../pages/Single\";\nimport CreateQuiz from \"./CreateQuiz\";\nimport { useSelector } from \"react-redux\";\nimport SingleAssessment from \"../pages/SingleAssessment\";\nimport { studentInputs, mentorInputs } from \"../Helpers/loginSource\";\nimport {\n  studentRegisterInputs,\n  mentorRegisterInputs,\n} from \"../Helpers/registerSource\";\nimport { kataInputs, proseInputs } from \"../Helpers/createFormSource\";\nimport Trial from \"../pages/Trial\";\nimport New from \"./New\";\nimport StudentAttempt from \"../pages/StudentAttempt\";\nimport StudentAssignment from \"../pages/StudentAssignment\";\n\nfunction App() {\n  const mentor = useSelector((state) => state.mentor?.currentUser?.mentor);\n  const student = useSelector((state) => state.student?.currentUser?.student);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<Home />} />\n\n          <Route\n            path=\"/mentors/login\"\n            element={\n              mentor ? (\n                <TmHome />\n              ) : (\n                <Login inputs={mentorInputs} type=\"mentor\" />\n              )\n            }\n          />\n          <Route\n            path=\"/students/login\"\n            element={\n              student ? (\n                <StudentDashboard />\n              ) : (\n                <Login inputs={studentInputs} type=\"student\" />\n              )\n            }\n          />\n          <Route\n            path=\"/students/register\"\n            element={\n              student ? (\n                <StudentDashboard />\n              ) : (\n                <Register inputs={studentRegisterInputs} type=\"student\" />\n              )\n            }\n          />\n          <Route\n            path=\"/mentors/register\"\n            element={\n              mentor ? (\n                <TmHome />\n              ) : (\n                <Register inputs={mentorRegisterInputs} type=\"mentor\" />\n              )\n            }\n          />\n          {student && (\n            <Route path=\"students\">\n              <Route index element={<StudentDashboard />} />\n              <Route path=\"trial\" element={<Trial />} />\n              <Route path=\"quiz\" element={<QuizPage />} />\n              <Route path=\"assignments/id\" element={<StudentAssignment />} />\n              <Route path=\"assignments\" element={<Assignment />} />\n            </Route>\n          )}\n          {mentor && (\n            <Route path=\"mentors\">\n              <Route index element={<TmHome />} />\n\n              <Route path=\"assessments\">\n                <Route\n                  index\n                  element={\n                    <Assessments\n                      data={assessmentRows}\n                      columns={assessmentColumns}\n                      type=\"mentor\"\n                    />\n                  }\n                />\n                <Route path=\":id\" element={<SingleAssessment />} />\n                <Route path=\"new-assessment\" element={<NewAssessment />} />\n                <Route path=\":id/new-quiz\" element={<CreateQuiz />} />\n                <Route\n                  path=\":id/new-kata\"\n                  element={<New inputs={kataInputs} title=\"Add New Kata\" />}\n                />\n                <Route\n                  path=\":id/new-prose\"\n                  element={<New inputs={proseInputs} title=\"Add New Prose\" />}\n                />\n              </Route>\n              <Route path=\"grades\">\n                <Route index element={<List />} />\n                <Route\n                  path=\":id\"\n                  element={\n                    <Single\n                      data={attemptRows}\n                      columns={attemptColumns}\n                      type=\"mentors\"\n                    />\n                  }\n                />\n              </Route>\n            </Route>\n          )}\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/store.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/NewAssessment.js",["245"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { addAssessment, submitContactReqToServer } from \"../redux/apiCall\";\nimport Sidebar from \"./Sidebar\";\n\nconst NewAssessment = () => {\n  const [assessmentInputs, setAssessmentInputs] = useState({\n    title: \"\",\n    duedate: \"\",\n  });\n\n  const dispatch = useDispatch();\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n  const { message, isFetching } = useSelector((state) => state.contact);\n\n  const assessmentChange = (event) => {\n    const { name, value } = event.target;\n    setAssessmentInputs({ ...assessmentInputs, [name]: value, mentor: mentor });\n  };\n\n  const onAddAssessment = (event) => {\n    event.preventDefault();\n    let emailData = {\n      title: assessmentInputs.title,\n      duedate: assessmentInputs.duedate,\n    };\n    try {\n      addAssessment(assessmentInputs, dispatch);\n      submitContactReqToServer(dispatch, emailData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(message);\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Assessment</Title>\n          <TopForm onSubmit={onAddAssessment}>\n            <FormInput>\n              <Label htmlFor=\"assTitle\">Assessment Title</Label>\n              <Input\n                id=\"assTitle\"\n                type=\"text\"\n                name=\"title\"\n                value={assessmentInputs.title}\n                onChange={assessmentChange}\n                placeholder=\"Title\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"duedate\">Due Date</Label>\n              <Input\n                id=\"duedate\"\n                type=\"datetime-local\"\n                name=\"duedate\"\n                value={assessmentInputs.duedate}\n                onChange={assessmentChange}\n                placeholder=\"Due Date\"\n              />\n            </FormInput>\n            <Button disabled={isFetching}>Add</Button>\n          </TopForm>\n        </Top>\n        {message.message && (\n          <AssessmentMessage>\n            <Message>{message.message}</Message>\n          </AssessmentMessage>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewAssessment;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst TopForm = styled.form`\n  display: flex;\n  width: 50%;\n  padding: 1.25rem;\n  margin: 2rem auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  box-sizing: border-box;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #101f3c;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin: 1rem;\n  &:disabled {\n    cursor: not-allowed;\n    color: #007cda;\n  }\n`;\n\nconst AssessmentMessage = styled.div`\n  color: gray;\n  font-size: 1rem;\n  margin: 1.25rem;\n`;\n\nconst Message = styled.div`\n  padding: 1.25rem;\n  border: 1px solid teal;\n  color: green;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/SendMail.js",[],["246","247"],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/CreateQuiz.js",["248","249"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\nimport { addAssessment } from \"../redux/apiCall\";\nimport { addQuiz } from \"../redux/assessmentSlice\";\nimport Sidebar from \"./Sidebar\";\n\nconst CreateQuiz = () => {\n  const [assessment, setAssessment] = useState({});\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n\n  const [assessmentInputs, setAssessmentInputs] = useState({\n    title: \"\",\n    duedate: \"\",\n  });\n\n  const [formData, setFormData] = useState({\n    question: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    time: null,\n  });\n\n  const dispatch = useDispatch();\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n\n  const assessmentChange = (event) => {\n    const { name, value } = event.target;\n    setAssessmentInputs({ ...assessmentInputs, [name]: value, mentor: mentor });\n  };\n\n  const onAddAssessment = (event) => {\n    event.preventDefault();\n    try {\n      addAssessment(assessmentInputs, dispatch);\n    } catch (error) {\n      console.log(error);\n    }\n\n    // setAssessment(assessmentInputs);\n  };\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let quizData = {\n      question: formData.question,\n      answers: [formData.answer1, formData.answer2, formData.answer3],\n      correct_answer: correctAnswer,\n      time_limit: formData.time,\n      assessment_id: 4,\n    };\n    try {\n      const { data } = await request.post(\"/quizzes\", quizData);\n\n      dispatch(addQuiz(data));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Quiz</Title>\n          <TopForm onSubmit={onAddAssessment}>\n            <FormInput>\n              <Label htmlFor=\"assTitle\">Assessment Title</Label>\n              <Input\n                id=\"assTitle\"\n                type=\"text\"\n                name=\"title\"\n                value={assessmentInputs.title}\n                onChange={assessmentChange}\n                placeholder=\"Title\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"duedate\">Due Date</Label>\n              <Input\n                id=\"duedate\"\n                type=\"datetime-local\"\n                name=\"duedate\"\n                value={assessmentInputs.duedate}\n                style={{ cursor: \"pointer\" }}\n                onChange={assessmentChange}\n                placeholder=\"Due Date\"\n              />\n            </FormInput>\n            <Button>Add</Button>\n          </TopForm>\n        </Top>\n        <AssessmentNumber>Assesment No: 1</AssessmentNumber>\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            <FormInput>\n              <Label htmlFor=\"question\">Question</Label>\n              <Input\n                id=\"question\"\n                type=\"text\"\n                name=\"question\"\n                onChange={handleChange}\n                placeholder=\"Question\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer1\">Asnwer 1</Label>\n              <Input\n                id=\"answer1\"\n                type=\"text\"\n                name=\"answer1\"\n                onChange={handleChange}\n                placeholder=\"Answer One\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer2\">Answer 2</Label>\n              <Input\n                id=\"answer2\"\n                type=\"text\"\n                name=\"answer2\"\n                onChange={handleChange}\n                placeholder=\"Answer Two\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer3\">Answer 3</Label>\n              <Input\n                id=\"answer3\"\n                type=\"text\"\n                name=\"answer3\"\n                onChange={handleChange}\n                placeholder=\"Answer Three\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"correct\">Correct Answer</Label>\n              <Input\n                id=\"correct\"\n                type=\"text\"\n                name=\"correct\"\n                onChange={(e) => setCorrectAnswer(e.target.value)}\n                placeholder=\"Correct Answer\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"time\">Time Limit</Label>\n              <Input\n                id=\"time\"\n                type=\"number\"\n                name=\"time\"\n                onChange={handleChange}\n                placeholder=\"Time Limit\"\n              />\n            </FormInput>\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default CreateQuiz;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst TopForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  box-sizing: border-box;\n`;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #1896ff;\n  color: #eff8ff;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst AssessmentNumber = styled.div`\n  color: gray;\n  font-size: 1rem;\n  margin: 1.25rem;\n`;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/quizSlice.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/contactSlice.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Assesments.js",["250"],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Home.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/TmHome.js",["251"],"import React from 'react'\nimport Calendar from 'react-calendar';\nimport Sidebar from '../components/Sidebar';\n// import dashboard from '../CSS/_dashboard.scss'\nimport 'react-calendar/dist/Calendar.css';\n\nfunction TmHome() {\n  return (\n    <div className=\"asses\">\n      <Sidebar />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>DASHBOARD</h1>\n        </div>\n        <div className='calender'>\n            <Calendar className='cal'/>\n        </div>\n        <div className='stats'>\n            <div className='stat1'>\n                <h5>STUDENTS NUMBER</h5>\n                <p>210</p>\n            </div>\n            <div className='stat1'>\n                <h5>ASSESSMENTS CREATED</h5>\n                <p>12</p>\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TmHome","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/List.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Assignment.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/QuizPage.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/StudentDashboard.js",["252"],"import React from 'react'\nimport StudentSideBar from '../components/StudentSideBar'\nimport studentDashboard from \"../CSS/_studentDashboard.scss\";\nimport { BsFillBellFill } from 'react-icons/bs';\nimport { MdGrade } from 'react-icons/md';\n\nfunction StudentDashboard() {\n  return (\n    <div className=\"asses\">\n      <StudentSideBar/>\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>HOME</h1>\n        </div>\n        <div className='dashboarD'>\n          <div className='notI'>\n            <h2>Notifications <BsFillBellFill className='n-icon'/> </h2>\n            <div className='notiContainer'>\n\n              <div className='notificatioN'>\n                <span className='titlE'>Course invitation</span>\n                <p>You have been invited to undertake CSS assessment</p>\n                <div className='nAv'>\n                  <span className='accepT'>Accept</span>\n                  <span className='declinE'>Decline</span>\n                </div>\n              </div>\n\n              <div className='notificatioN'>\n                <span className='titlE'>Course invitation</span>\n                <p>You have been invited to undertake java assessment</p>\n                <div className='nAv'>\n                  <span className='accepT'>Accept</span>\n                  <span className='declinE'>Decline</span>\n                </div>\n              </div>\n\n              <div className='notificatioN'>\n                <span className='titlE'>Course invitation</span>\n                <p>You have been invited to undertake HTML assessment</p>\n                <div className='nAv'>\n                  <span className='accepT'>Accept</span>\n                  <span className='declinE'>Decline</span>\n                </div>\n              </div>\n\n            </div>\n          </div>\n          <div className='gradE'>\n            <h2>Grades <MdGrade className='n-icon'/></h2>\n            <div className='headinG'>\n              <span>ASSESSMENT NAME</span>\n              <span>DUE DATE</span>\n              <span>SCORE</span>\n            </div>\n            <div className='gradeCon'>\n              <div className='grADE'>\n                <span>Assessment one</span>\n                <span>08/05/22</span>\n                <span>70%</span>\n              </div>\n              <div className='grADE'>\n                <span>Assessment two</span>\n                <span>12/05/22</span>\n                <span>40%</span>\n              </div>\n              <div className='grADE'>\n                <span>Assessment three</span>\n                <span>07/05/22</span>\n                <span>80%</span>\n              </div>\n              \n              \n            </div>\n          </div>\n        </div>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default StudentDashboard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\";\n// import styled from \"styled-components\";\n// import StudentAnnouncement from \"../components/StudentAnnouncement\";\n// import StudentHero from \"../components/StudentHero\";\n// import StudentSideBar from \"../components/StudentSideBar\";\n\n// const StudentDashboard = () => {\n//   return (\n//     <Container>\n//       <StudentSideBar />\n//       <HomeContainer>\n//         <StudentHero />\n//         <StudentAnnouncement />\n//       </HomeContainer>\n//     </Container>\n//   );\n// };\n\n// export default StudentDashboard;\n\n// const Container = styled.main`\n//   display: flex;\n//   color: #1e144f;\n//   background-color: #f6f7fb;\n// `;\n\n// const HomeContainer = styled.section`\n//   flex: 8;\n// `;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Single.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/CombineLogin.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/signup/Register.js",["253"],"import React, { useState } from \"react\";\nimport \"./signup.css\";\nimport { Link } from \"react-router-dom\";\nimport request from \"../../Helpers/requestMethods\";\n\nexport default function Register({ inputs, type }) {\n  const [input, setInput] = useState({});\n  const [confirmPassword, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInput({ ...input, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(false);\n\n    try {\n      if (input.password === confirmPassword) {\n        if (input.username) {\n          const { data } = await request.post(\"/students/register\", input);\n          data && window.location.replace(\"/students/login\");\n        }\n        if (input.work_id) {\n          const { data } = await request.post(\"/mentors/register\", input);\n          data && window.location.replace(\"/mentors/login\");\n        }\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let link;\n\n  switch (type) {\n    case \"student\":\n      link = \"/students/login\";\n      break;\n    case \"mentor\":\n      link = \"/mentors/login\";\n      break;\n    default:\n      break;\n  }\n  return (\n    <div className=\"register-container\">\n      <div className=\"register-wrapper\">\n        <h1 className=\"header\">Create Account</h1>\n        <p>Fill in the form below</p>\n        <div className=\"registerForm\">\n          {inputs?.map((input) => (\n            <input\n              key={input.id}\n              type={input.type}\n              name={input.name}\n              onChange={handleChange}\n              placeholder={input.placeholder}\n              className=\"register-input\"\n            />\n          ))}\n          <input\n            type=\"password\"\n            name=\"confirm_password\"\n            onChange={(event) => setConfirmPass(event.target.value)}\n            placeholder=\"Confirm Password\"\n            className=\"register-input\"\n          />\n          </div>\n\n          <br />\n          <span>\n            {\" \"}\n            By creating an account, I consent to the processing of my personal\n            data in accordance with the <b>PRIVACY POLICY</b>\n          </span>\n          <button onClick={handleSubmit} className=\"fluid ui button blue\">\n            CREATE\n          </button>\n          <span className=\"mt-2\">\n            Have an account?{\" \"}\n            <Link to={link} className=\"log\">\n              Login\n            </Link>\n          </span>\n        </div>\n      </div>\n  );\n}\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/login/Login.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Sidebar.js",["254"],"import React from \"react\";\nimport sidebar from \"../CSS/_sidebar.scss\";\nimport image from \"../assests/images/logo.png\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@radix-ui/react-avatar\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { FaBook } from \"react-icons/fa\";\nimport { MdGrade } from \"react-icons/md\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\n\nfunction Sidebar() {\n  return (\n    <div className=\"side-nav\">\n      <Link to=\"/\">\n        <div className=\"myLogo\">\n          <img src={image} alt=\"wewe\" />\n        </div>\n      </Link>\n\n      <div className=\"prof\">\n        <Avatar>\n          <AvatarImage\n            src=\"https://images.unsplash.com/photo-1492633423870-43d1cd2775eb?&w=128&h=128&dpr=2&q=80\"\n            alt=\"Colm Tuite\"\n            className=\"tESTING\"\n          />\n          <AvatarFallback delayMs={600}>CT</AvatarFallback>\n        </Avatar>\n        <span>username</span>\n      </div>\n      <div className=\"icon-container\">\n        <Link to=\"/mentors\">\n          <div className=\"iCon\">\n            <AiFillHome className=\"iCON\" /> <span>Home</span>\n          </div>\n        </Link>\n        <Link to=\"/mentors/assessments\">\n          <div className=\"iCon\">\n            {\" \"}\n            <FaBook className=\"iCON\" /> <span>Assesments</span>\n          </div>\n        </Link>\n\n        <Link to=\"/mentors/grades\">\n          <div className=\"iCon\">\n            {\" \"}\n            <MdGrade className=\"iCON\" /> <span>Grades</span>\n          </div>\n        </Link>\n      </div>\n      <div className=\"logof\">\n        {\" \"}\n        <BiLogOutCircle className=\"iCON\" /> <span>Logout</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Quiz.js",["255","256"],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Kata.js",["257","258"],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Subjective.js",["259","260"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Subjective({page, setPage, setPros}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n        \n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setPros(allQuestions)\n    };\n\n\n    // console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container' key={index}>\n                        <h4>Question  {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n       \n    </div>\n  )\n}\n\nexport default Subjective","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/apiCall.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/assessmentSlice.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Navbar.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Footer.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/DataTable.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/StudentSideBar.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Question.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/AnswerTable.js",["261"],"import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport styled from \"styled-components\";\n\nconst rows = [\n  {\n    id: 1,\n    name: \"What is the sum of ...\",\n    answer: 2100999,\n    correctAnswer: 2100999,\n    answerThree: 59003,\n    answerFour: 290013,\n  },\n  {\n    id: 2,\n    name: \"What is the sum of ...\",\n    answer: 900,\n    correctAnswer: 9099,\n    answerThree: 5003,\n    answerFour: 2013,\n  },\n  {\n    id: 3,\n    name: \"What is the sum of ...\",\n    answer: 5,\n    correctAnswer: 5,\n    answerThree: 59,\n    answerFour: 3,\n  },\n  {\n    id: 4,\n    name: \"What is the sum of ...\",\n    answer: 9,\n    correctAnswer: 2100999,\n    answerThree: 9003,\n    answerFour: 290013,\n  },\n];\n\nconst AnswerTable = () => {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Question Id</TableCell>\n            <TableCell>Questions</TableCell>\n            <TableCell>Selected Answer</TableCell>\n            <TableCell>Correct Answer</TableCell>\n            <TableCell>Answer Three</TableCell>\n            <TableCell>Answer Four</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.answer}</TableCell>\n              <TableCell>{row.correctAnswer}</TableCell>\n              <TableCell>{row.answerThree}</TableCell>\n              <TableCell>{row.answerFour}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default AnswerTable;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/requestMethods.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/data.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/auth.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/dataTableSource.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/answer/Answer.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/mentorSlice.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/redux/studentSlice.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/New.js",["262","263"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\n\nimport Sidebar from \"./Sidebar\";\n\nconst New = ({ inputs, title }) => {\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n  const [formData, setFormData] = useState({\n    question: \"\",\n    instructions: \"\",\n    answer: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newData = {\n      question: formData.question,\n      instructions: formData.instructions,\n      answer: formData.answer,\n      assessment_id: assessmentId,\n    };\n    try {\n      const { data } = await request.post(\"/kataas\", newData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>{title}</Title>\n          <AssessmentContainer>\n            <AssessmentTitle>{assessment.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment.duedate}</AssessmentDuedate>\n          </AssessmentContainer>\n        </Top>\n\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            {inputs.map((input) => (\n              <FormInput key={input.id}>\n                <Label>{input.label}</Label>\n                <Input\n                  type={input.type}\n                  name={input.name}\n                  onChange={handleChange}\n                  placeholder={input.placeholder}\n                />\n              </FormInput>\n            ))}\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default New;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentContainer = styled.article`\n  display: flex;\n  align-items: center;\n  margin: 1.25rem 0;\n  width: 40%;\n  justify-content: space-between;\n`;\nconst AssessmentTitle = styled.article``;\nconst AssessmentDuedate = styled.article``;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #ea501a;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/SingleAssessment.js",["264","265"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleAssessmentSidebar from \"../components/SingleAssessmentSidebar\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { shuffleAnswers } from \"../Helpers/shuffleAnswers\";\n\nconst SingleAssessment = () => {\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const [isQuizExpanded, setQuizExpanded] = useState(false);\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n\n  const expand = () => {\n    setQuizExpanded((isQuizExpanded) => !isQuizExpanded);\n  };\n\n  return (\n    <Container>\n      <SingleAssessmentSidebar />\n      <AssessmentContainer>\n        <Top>\n          <AssessmentInfo>\n            <AssessmentTitle>{assessment?.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment?.duedate}</AssessmentDuedate>\n          </AssessmentInfo>\n        </Top>\n        <Bottom>\n          <TaskContainer>\n            <Task onClick={expand}>\n              <ArrowForwardIosIcon\n                on\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Questions</Title>\n            </Task>\n            {isQuizExpanded && (\n              <QuestionContainer>\n                {assessment?.quizzes?.map((question) => {\n                  const answers = shuffleAnswers(question);\n                  return (\n                    <Question>\n                      <Prompt>{question.question}</Prompt>\n                      {answers.map((answer) => (\n                        <Answer>{answer}</Answer>\n                      ))}\n                    </Question>\n                  );\n                })}\n              </QuestionContainer>\n            )}\n          </TaskContainer>\n          <TaskContainer>\n            <Task>\n              <ArrowForwardIosIcon\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Katas</Title>\n            </Task>\n          </TaskContainer>\n          <TaskContainer>\n            <Task>\n              <ArrowForwardIosIcon\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Prose</Title>\n            </Task>\n          </TaskContainer>\n        </Bottom>\n      </AssessmentContainer>\n    </Container>\n  );\n};\n\nexport default SingleAssessment;\n\nconst Container = styled.main`\n  display: flex;\n  width: 100%;\n  position: relative;\n`;\n\nconst AssessmentContainer = styled.section`\n  width: 70vw;\n  min-height: 100vh;\n  margin: 0 auto;\n`;\n\nconst Top = styled.article``;\nconst Bottom = styled.article`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst AssessmentTitle = styled.article``;\n\nconst AssessmentInfo = styled.article`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentDuedate = styled.article``;\n\nconst TaskContainer = styled.section``;\n\nconst Task = styled.article`\n  display: flex;\n  align-items: center;\n  background-color: #f5f5f5;\n  gap: 5px;\n  cursor: pointer;\n  padding: 0.8rem;\n  margin: 1.25rem;\n`;\n\nconst Title = styled.span`\n  font-size: 1rem;\n  font-weight: bold;\n  color: #101f3c;\n`;\n\nconst QuestionContainer = styled.article``;\nconst Question = styled.article`\n  border: 0.5px solid lightgray;\n  padding: 0.8rem;\n  margin: 1.25rem;\n`;\n\nconst Prompt = styled.h3`\n  background-color: #lightgray;\n  padding: 0.8rem;\n  margin: 0.25rem;\n  color: gray;\n  cursor: pointer;\n`;\n\nconst Answer = styled.article`\n  background-color: #f5f5f5;\n  padding: 0.8rem;\n  margin: 0.25rem;\n  cursor: pointer;\n  color: gray;\n`;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/StudentAttempt.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/StudentAssignment.js",["266","267"],"import React from 'react'\nimport { Link, Route, Router, Routes } from 'react-router-dom'\nimport Skata from '../components/Skata'\nimport Spros from '../components/Spros'\nimport Squiz from '../components/Squiz'\nimport StudentSideBar from '../components/StudentSideBar'\nimport Test from './Test'\n\n\nfunction StudentAssignment() {\n  return (\n    <div className='asses'>\n      <StudentSideBar/>\n      <div className='obscure'>\n        <div className='leFT'>\n          <div className='miniNav'>\n            <Link to='students/assignments/id/quiz'>\n              <span>QUIZ</span>\n            </Link>\n            <Link to='students/assignments/id/kata'>\n              <span>KATA</span>\n            </Link>\n            <Link to='students/assignments/id/pros'>\n              <span>PROS</span>\n            </Link>\n            \n            \n          </div>\n        </div>\n        <div className='riGHT'>\n          {/* <Test/> */}\n          \n           <Routes>\n                 <Route index  path='students/assignments/id/quiz' element={<Squiz/>}/>\n                 <Route  path='students/assignments/id/kata' element={< Skata />}/>\n                 <Route  path='students/assignments/id/pros' element={< Spros />}/>\n            </Routes>\n          \n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StudentAssignment","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Trial.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/createFormSource.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/loginSource.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/registerSource.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Assessments.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/Helpers/attemptsSource.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Skata.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Squiz.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/pages/Test.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/Spros.js",[],"/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/SingleAssessmentSidebar.js",["268","269","270"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport image from \"../assests/images/logo.png\";\n\nconst SingleAssessmentSidebar = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <Top>\n          <Link to=\"/\">\n            <Logo src={image} alt=\"logo\" />\n          </Link>\n        </Top>\n        <Center></Center>\n        <Bottom></Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default SingleAssessmentSidebar;\n\nconst Container = styled.main`\n  width: 10vw;\n  background-color: #101f3c;\n  border-right: 0.5px solid rgb(230, 227, 227);\n  height: 100vh;\n  color: #fff;\n  // position: fixed;\n  padding: 3.75rem;\n`;\n\nconst Wrapper = styled.section`\n  width: 100%;\n`;\nconst Logo = styled.img`\n  width: 12.5rem;\n`;\nconst Top = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Center = styled.section``;\n\nconst List = styled.ul``;\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 10px 5px;\n  &:hover {\n    background-color: #202e49;\n  }\n`;\n\nconst ItemSpan = styled.span`\n  font-size: 13px;\n  font-weight: 600;\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.section`\n  padding: 0.625rem;\n  position: absolute;\n  bottom: 0;\n`;\n","/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/src/components/AssessmentDataTable.js",["271"],"import { DataGrid } from \"@mui/x-data-grid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\nimport { deleteAssessment } from \"../redux/apiCall\";\n\nconst AssesmentDataTable = ({ data, columns, type }) => {\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n  const dispatch = useDispatch();\n\n  const handleDelete = (id) => {\n    deleteAssessment(id, dispatch);\n  };\n\n  const sendInvite = async (assessment) => {\n    let inviteData = {\n      assessment_id: assessment.id,\n      mentor: mentor,\n      duedate: assessment.duedate,\n    };\n    try {\n      const { data } = await request.post(\"/invites\", inviteData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  let actionColumn1;\n  let actionColumn2;\n  let actionColumn3;\n\n  switch (type) {\n    case \"mentor\":\n      actionColumn1 = [\n        {\n          field: \"createNew\",\n          headerName: \"Create New\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/mentors/assessments/${params.row.id}/new-quiz`}>\n                  <Button title=\"quiz\">Quiz</Button>\n                </Link>\n\n                <Link to={`/mentors/assessments/${params.row.id}/new-kata`}>\n                  <Button title=\"kata\">Kata</Button>\n                </Link>\n\n                <Link to={`/mentors/assessments/${params.row.id}/new-prose`}>\n                  <Button title=\"prose\">Prose</Button>\n                </Link>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      actionColumn2 = [\n        {\n          field: \"invites\",\n          headerName: \"Invite Students\",\n          width: 100,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <InviteButton onClick={() => sendInvite(params.row)}>\n                  Invite\n                </InviteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      actionColumn3 = [\n        {\n          field: \"action\",\n          headerName: \"Action\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/mentors/assessments/${params.row.id}`}>\n                  <ViewButton>View</ViewButton>\n                </Link>\n                <DeleteButton onClick={() => handleDelete(params.row.id)}>\n                  Delete\n                </DeleteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n\n      break;\n    case \"student\":\n      actionColumn2 = [\n        {\n          field: \"action\",\n          headerName: \"Action\",\n          width: 200,\n          renderCell: (params) => {\n            return (\n              <ActionCell>\n                <Link to={`/students/assessments/${params.row.id}`}>\n                  <ViewButton>View</ViewButton>\n                </Link>\n                <DeleteButton onClick={() => handleDelete(params.row.id)}>\n                  Delete\n                </DeleteButton>\n              </ActionCell>\n            );\n          },\n        },\n      ];\n      break;\n\n    default:\n      break;\n  }\n\n  return (\n    <Container>\n      <TitleContainer>\n        All Assessments\n        <Link to=\"/mentors/assessments/new-assessment\">\n          <LinkText>Add New</LinkText>\n        </Link>\n      </TitleContainer>\n      <DataGrid\n        rows={data}\n        columns={columns.concat(actionColumn1, actionColumn2, actionColumn3)}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n      />\n    </Container>\n  );\n};\n\nexport default AssesmentDataTable;\n\nconst Container = styled.main`\n  height: 37.5rem;\n  padding: 1.25rem;\n`;\n\nconst ActionCell = styled.article`\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n`;\n\nconst ViewButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: green;\n  background-color: rgba(0, 128, 0, 0.2);\n  cursor: pointer;\n`;\nconst Button = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: white;\n  background-color: ${(props) =>\n    props.title === \"quiz\"\n      ? \"#ea501a\"\n      : props.title === \"kata\"\n      ? \"#101f3c\"\n      : \"teal\"};\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: crimson;\n  background-color: rgba(255, 0, 0, 0.2);\n  cursor: pointer;\n`;\nconst InviteButton = styled.div`\n  padding: 2px 5px;\n  border-radius: 5px;\n  color: crimson;\n  background-color: rgba(255, 0, 0, 0.2);\n  cursor: pointer;\n`;\n\nconst TitleContainer = styled.article`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 1.25rem;\n  color: gray;\n  margin-bottom: 1.25rem;\n`;\n\nconst LinkText = styled.span`\n  color: green;\n  font-size: 1rem;\n  font-weight: 400;\n  border: 1px solid green;\n  padding: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n`;\n",{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":31,"column":8,"nodeType":"278","messageId":"279","endLine":31,"endColumn":22},{"ruleId":"276","severity":1,"message":"280","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":21},{"ruleId":"272","replacedBy":"281"},{"ruleId":"274","replacedBy":"282"},{"ruleId":"276","severity":1,"message":"283","line":10,"column":10,"nodeType":"278","messageId":"279","endLine":10,"endColumn":20},{"ruleId":"276","severity":1,"message":"284","line":10,"column":22,"nodeType":"278","messageId":"279","endLine":10,"endColumn":35},{"ruleId":"276","severity":1,"message":"285","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":17},{"ruleId":"276","severity":1,"message":"286","line":4,"column":8,"nodeType":"278","messageId":"279","endLine":4,"endColumn":17},{"ruleId":"276","severity":1,"message":"287","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":24},{"ruleId":"276","severity":1,"message":"288","line":9,"column":10,"nodeType":"278","messageId":"279","endLine":9,"endColumn":15},{"ruleId":"276","severity":1,"message":"289","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":15},{"ruleId":"276","severity":1,"message":"290","line":2,"column":8,"nodeType":"278","messageId":"279","endLine":2,"endColumn":16},{"ruleId":"276","severity":1,"message":"291","line":24,"column":11,"nodeType":"278","messageId":"279","endLine":24,"endColumn":32},{"ruleId":"276","severity":1,"message":"290","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":16},{"ruleId":"276","severity":1,"message":"291","line":22,"column":11,"nodeType":"278","messageId":"279","endLine":22,"endColumn":32},{"ruleId":"276","severity":1,"message":"290","line":3,"column":8,"nodeType":"278","messageId":"279","endLine":3,"endColumn":16},{"ruleId":"276","severity":1,"message":"291","line":22,"column":11,"nodeType":"278","messageId":"279","endLine":22,"endColumn":32},{"ruleId":"276","severity":1,"message":"292","line":8,"column":8,"nodeType":"278","messageId":"279","endLine":8,"endColumn":14},{"ruleId":"293","severity":1,"message":"294","line":15,"column":37,"nodeType":"295","messageId":"296","endLine":15,"endColumn":39},{"ruleId":"276","severity":1,"message":"297","line":40,"column":15,"nodeType":"278","messageId":"279","endLine":40,"endColumn":19},{"ruleId":"276","severity":1,"message":"298","line":5,"column":23,"nodeType":"278","messageId":"279","endLine":5,"endColumn":32},{"ruleId":"293","severity":1,"message":"294","line":15,"column":37,"nodeType":"295","messageId":"296","endLine":15,"endColumn":39},{"ruleId":"276","severity":1,"message":"299","line":2,"column":23,"nodeType":"278","messageId":"279","endLine":2,"endColumn":29},{"ruleId":"276","severity":1,"message":"300","line":7,"column":8,"nodeType":"278","messageId":"279","endLine":7,"endColumn":12},{"ruleId":"276","severity":1,"message":"301","line":48,"column":7,"nodeType":"278","messageId":"279","endLine":48,"endColumn":11},{"ruleId":"276","severity":1,"message":"302","line":50,"column":7,"nodeType":"278","messageId":"279","endLine":50,"endColumn":11},{"ruleId":"276","severity":1,"message":"303","line":60,"column":7,"nodeType":"278","messageId":"279","endLine":60,"endColumn":15},{"ruleId":"276","severity":1,"message":"297","line":23,"column":15,"nodeType":"278","messageId":"279","endLine":23,"endColumn":19},"no-native-reassign",["304"],"no-negated-in-lhs",["305"],"no-unused-vars","'StudentAttempt' is defined but never used.","Identifier","unusedVar","'newAssignment' is defined but never used.",["304"],["305"],"'assessment' is assigned a value but never used.","'setAssessment' is assigned a value but never used.","'assesment' is defined but never used.","'dashboard' is defined but never used.","'studentDashboard' is defined but never used.","'error' is assigned a value but never used.","'sidebar' is defined but never used.","'question' is defined but never used.","'handleRemoveQuestions' is assigned a value but never used.","'styled' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'useParams' is defined but never used.","'Router' is defined but never used.","'Test' is defined but never used.","'List' is assigned a value but never used.","'Item' is assigned a value but never used.","'ItemSpan' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]