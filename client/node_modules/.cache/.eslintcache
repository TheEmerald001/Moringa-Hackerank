[{"/home/moringa/Development/rails/Moringa-Hackerank/client/src/index.js":"1","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/store.js":"2","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/App.js":"3","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/quizSlice.js":"4","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/contactSlice.js":"5","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/NewAssessment.js":"6","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/CreateQuiz.js":"7","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/SendMail.js":"8","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Home.js":"9","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/TmHome.js":"10","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/List.js":"11","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/QuizPage.js":"12","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Assignment.js":"13","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/StudentDashboard.js":"14","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Single.js":"15","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/CombineLogin.js":"16","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Trial.js":"17","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Assesments.js":"18","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Test.js":"19","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/login/Login.js":"20","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/signup/Register.js":"21","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Sidebar.js":"22","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/apiCall.js":"23","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/assessmentSlice.js":"24","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Subjective.js":"25","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Kata.js":"26","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Quiz.js":"27","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/data.js":"28","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/requestMethods.js":"29","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js":"30","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Navbar.js":"31","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Footer.js":"32","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/DataTable.js":"33","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Question.js":"34","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/StudentSideBar.js":"35","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/AnswerTable.js":"36","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Info.js":"37","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/auth.js":"38","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/dataTableSource.js":"39","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/answer/Answer.js":"40","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/New.js":"41","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/mentorSlice.js":"42","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/studentSlice.js":"43","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Assessments.js":"44","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/SingleAssessment.js":"45","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js":"46","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/createFormSource.js":"47","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/loginSource.js":"48","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/AssessmentDataTable.js":"49","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/SingleAssessmentSidebar.js":"50","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/StudentAssignment.js":"51","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Skata.js":"52","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Squiz.js":"53","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Spros.js":"54"},{"size":307,"mtime":1667147982807,"results":"55","hashOfConfig":"56"},{"size":551,"mtime":1667147982815,"results":"57","hashOfConfig":"56"},{"size":3913,"mtime":1667245008112,"results":"58","hashOfConfig":"56"},{"size":1708,"mtime":1667147982815,"results":"59","hashOfConfig":"56"},{"size":872,"mtime":1667147982815,"results":"60","hashOfConfig":"56"},{"size":4370,"mtime":1667147982807,"results":"61","hashOfConfig":"56"},{"size":5387,"mtime":1667147982807,"results":"62","hashOfConfig":"56"},{"size":2026,"mtime":1666959277840,"results":"63","hashOfConfig":"56"},{"size":2820,"mtime":1667147982811,"results":"64","hashOfConfig":"56"},{"size":830,"mtime":1667213597666,"results":"65","hashOfConfig":"56"},{"size":429,"mtime":1666864970111,"results":"66","hashOfConfig":"56"},{"size":2324,"mtime":1666879632055,"results":"67","hashOfConfig":"56"},{"size":4591,"mtime":1667234602442,"results":"68","hashOfConfig":"56"},{"size":3615,"mtime":1667153087967,"results":"69","hashOfConfig":"56"},{"size":2832,"mtime":1666864970111,"results":"70","hashOfConfig":"56"},{"size":2748,"mtime":1667147982811,"results":"71","hashOfConfig":"56"},{"size":288,"mtime":1666880691413,"results":"72","hashOfConfig":"56"},{"size":3020,"mtime":1667153087963,"results":"73","hashOfConfig":"56"},{"size":397,"mtime":1667128432785,"results":"74","hashOfConfig":"56"},{"size":1428,"mtime":1667147982811,"results":"75","hashOfConfig":"56"},{"size":2591,"mtime":1667202897745,"results":"76","hashOfConfig":"56"},{"size":1846,"mtime":1667203392127,"results":"77","hashOfConfig":"56"},{"size":2542,"mtime":1667147982815,"results":"78","hashOfConfig":"56"},{"size":1678,"mtime":1667147982815,"results":"79","hashOfConfig":"56"},{"size":1694,"mtime":1667153087963,"results":"80","hashOfConfig":"56"},{"size":1673,"mtime":1667153087959,"results":"81","hashOfConfig":"56"},{"size":2931,"mtime":1667153087959,"results":"82","hashOfConfig":"56"},{"size":1837,"mtime":1666864970103,"results":"83","hashOfConfig":"56"},{"size":404,"mtime":1666864970103,"results":"84","hashOfConfig":"56"},{"size":281,"mtime":1667147982799,"results":"85","hashOfConfig":"56"},{"size":2717,"mtime":1667202372266,"results":"86","hashOfConfig":"56"},{"size":398,"mtime":1666864970107,"results":"87","hashOfConfig":"56"},{"size":2150,"mtime":1666864970107,"results":"88","hashOfConfig":"56"},{"size":2033,"mtime":1666864970107,"results":"89","hashOfConfig":"56"},{"size":6536,"mtime":1667203447129,"results":"90","hashOfConfig":"56"},{"size":2013,"mtime":1666864970107,"results":"91","hashOfConfig":"56"},{"size":5670,"mtime":1667153087963,"results":"92","hashOfConfig":"56"},{"size":149,"mtime":1666864970103,"results":"93","hashOfConfig":"56"},{"size":1922,"mtime":1666864970103,"results":"94","hashOfConfig":"56"},{"size":584,"mtime":1666864970107,"results":"95","hashOfConfig":"56"},{"size":3693,"mtime":1667147982807,"results":"96","hashOfConfig":"56"},{"size":648,"mtime":1667147982815,"results":"97","hashOfConfig":"56"},{"size":658,"mtime":1667147982819,"results":"98","hashOfConfig":"56"},{"size":858,"mtime":1667147982811,"results":"99","hashOfConfig":"56"},{"size":4002,"mtime":1667147982811,"results":"100","hashOfConfig":"56"},{"size":750,"mtime":1667147982799,"results":"101","hashOfConfig":"56"},{"size":748,"mtime":1667147982799,"results":"102","hashOfConfig":"56"},{"size":426,"mtime":1667147982799,"results":"103","hashOfConfig":"56"},{"size":3948,"mtime":1667147982807,"results":"104","hashOfConfig":"56"},{"size":1287,"mtime":1667147982807,"results":"105","hashOfConfig":"56"},{"size":996,"mtime":1667244231134,"results":"106","hashOfConfig":"56"},{"size":1494,"mtime":1667244542324,"results":"107","hashOfConfig":"56"},{"size":857,"mtime":1667244910590,"results":"108","hashOfConfig":"56"},{"size":1241,"mtime":1667244417878,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"6osy58",{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"112"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"112"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"112"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"112"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"112"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/moringa/Development/rails/Moringa-Hackerank/client/src/index.js",[],["236","237"],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/store.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/App.js",["238","239"],"import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Assessments from \"../pages/Assessments\";\nimport Home from \"../pages/Home\";\nimport TmHome from \"../pages/TmHome\";\nimport NewAssessment from \"./NewAssessment\";\n\nimport List from \"../pages/List\";\nimport Assignment from \"../pages/Assignment\";\nimport Register from \"../pages/signup/Register\";\nimport Login from \"../pages/login/Login\";\n\nimport QuizPage from \"../pages/QuizPage\";\nimport StudentDashboard from \"../pages/StudentDashboard\";\nimport {\n  assessmentColumns,\n  assessmentRows,\n} from \"../Helpers/assessmentDataTableSource\";\nimport Single from \"../pages/Single\";\nimport CombineLogin from \"../pages/CombineLogin\";\nimport CreateQuiz from \"./CreateQuiz\";\nimport { useSelector } from \"react-redux\";\nimport SingleAssessment from \"../pages/SingleAssessment\";\nimport { studentInputs, mentorInputs } from \"../Helpers/loginSource\";\nimport { kataInputs, proseInputs } from \"../Helpers/createFormSource\";\nimport Trial from \"../pages/Trial\";\nimport New from \"./New\";\nimport StudentAssignment from \"../pages/StudentAssignment\";\nimport Skata from \"./Skata\";\nimport Spros from \"./Spros\";\nimport Squiz from \"./Squiz\";\n\nfunction App() {\n  const mentor = useSelector((state) => state.mentor?.currentUser?.mentor);\n  const student = useSelector((state) => state.student?.currentUser?.student);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\">\n          <Route index element={<Home />} />\n          \n          <Route\n            path=\"/mentors/login\"\n            element={mentor ? <TmHome /> : <Login inputs={mentorInputs} />}\n          />\n          <Route\n            path=\"/students/login\"\n            element={\n              student ? <StudentDashboard /> : <Login inputs={studentInputs} />\n            }\n          />\n          <Route path=\"/students/register\" element={student ? <StudentDashboard /> : <Register />} />\n          {student && (\n            <Route path=\"students\">\n              <Route index element={<StudentDashboard />} />\n              <Route path=\"trial\" element={<Trial />} />\n              <Route path=\"quiz\" element={<QuizPage />} />\n              <Route path=\"assignments/:id\"  >\n                {/* <Route index element={<StudentAssignment />}/> */}\n                <Route index element={<Squiz />}/>\n                <Route path=\"kata\"  element={<Skata />}/>\n                <Route path=\"quiz\"  element={<Squiz />}/>\n                <Route path=\"pros\"  element={<Spros />}/>\n              </Route>\n              \n              <Route path=\"assignments\" element={<Assignment />} />\n            </Route>\n           )}\n          {mentor && (\n            <Route path=\"mentors\">\n              <Route index element={<TmHome />} />\n\n              <Route path=\"assessments\">\n                <Route\n                  index\n                  element={\n                    <Assessments\n                      data={assessmentRows}\n                      columns={assessmentColumns}\n                      type=\"mentor\"\n                    />\n                  }\n                />\n                <Route path=\":id\" element={<SingleAssessment />} />\n                <Route path=\"new-assessment\" element={<NewAssessment />} />\n                <Route path=\":id/new-quiz\" element={<CreateQuiz />} />\n                <Route\n                  path=\":id/new-kata\"\n                  element={<New inputs={kataInputs} title=\"Add New Kata\" />}\n                />\n                <Route\n                  path=\":id/new-prose\"\n                  element={<New inputs={proseInputs} title=\"Add New Prose\" />}\n                />\n              </Route>\n              <Route path=\"grades\">\n                <Route index element={<List />} />\n                <Route path=\":studentId\" element={<Single />} />\n              </Route>\n            </Route>\n          )}\n        </Route>\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/quizSlice.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/contactSlice.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/NewAssessment.js",["240","241"],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { addAssessment, submitContactReqToServer } from \"../redux/apiCall\";\nimport Sidebar from \"./Sidebar\";\n\nconst NewAssessment = () => {\n  const [assessmentInputs, setAssessmentInputs] = useState({\n    title: \"\",\n    duedate: \"\",\n  });\n\n  const dispatch = useDispatch();\n  const mentor = useSelector((state) => state.user?.currentUser?.mentor);\n  const { message, isFetching } = useSelector((state) => state.contact);\n\n  const assessmentChange = (event) => {\n    const { name, value } = event.target;\n    setAssessmentInputs({ ...assessmentInputs, [name]: value, mentor: mentor });\n  };\n\n  const onAddAssessment = (event) => {\n    event.preventDefault();\n    let emailData = {\n      title: assessmentInputs.title,\n      duedate: assessmentInputs.duedate,\n    };\n    try {\n      addAssessment(assessmentInputs, dispatch);\n      submitContactReqToServer(dispatch, emailData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  console.log(message);\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Assessment</Title>\n          <TopForm onSubmit={onAddAssessment}>\n            <FormInput>\n              <Label htmlFor=\"assTitle\">Assessment Title</Label>\n              <Input\n                id=\"assTitle\"\n                type=\"text\"\n                name=\"title\"\n                value={assessmentInputs.title}\n                onChange={assessmentChange}\n                placeholder=\"Title\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"duedate\">Due Date</Label>\n              <Input\n                id=\"duedate\"\n                type=\"datetime-local\"\n                name=\"duedate\"\n                value={assessmentInputs.duedate}\n                onChange={assessmentChange}\n                placeholder=\"Due Date\"\n              />\n            </FormInput>\n            <Button disabled={isFetching}>Add</Button>\n          </TopForm>\n        </Top>\n        {message.message && (\n          <AssessmentMessage>\n            <Message>{message.message}</Message>\n          </AssessmentMessage>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewAssessment;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst TopForm = styled.form`\n  display: flex;\n  width: 50%;\n  padding: 1.25rem;\n  margin: 2rem auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  box-sizing: border-box;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  width: 100%;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #101f3c;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin: 1rem;\n  &:disabled {\n    cursor: not-allowed;\n    color: #007cda;\n  }\n`;\n\nconst AssessmentMessage = styled.div`\n  color: gray;\n  font-size: 1rem;\n  margin: 1.25rem;\n`;\n\nconst Message = styled.div`\n  padding: 1.25rem;\n  border: 1px solid teal;\n  color: green;\n  font-weight: 600;\n  border-radius: 5px;\n`;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/CreateQuiz.js",["242","243"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\n\nimport Sidebar from \"./Sidebar\";\n\nconst CreateQuiz = () => {\n  const [correctAnswer, setCorrectAnswer] = useState(\"\");\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n  const [formData, setFormData] = useState({\n    question: \"\",\n    answer1: \"\",\n    answer2: \"\",\n    answer3: \"\",\n    time: null,\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let quizData = {\n      question: formData.question,\n      answers: [formData.answer1, formData.answer2, formData.answer3],\n      correct_answer: correctAnswer,\n      time_limit: formData.time,\n      assessment_id: assessmentId,\n    };\n    try {\n      const { data } = await request.post(\"/quizzes\", quizData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>Add New Quiz</Title>\n          <AssessmentContainer>\n            <AssessmentTitle>{assessment.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment.duedate}</AssessmentDuedate>\n          </AssessmentContainer>\n        </Top>\n\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            <FormInput>\n              <Label htmlFor=\"question\">Question</Label>\n              <Input\n                id=\"question\"\n                type=\"text\"\n                name=\"question\"\n                onChange={handleChange}\n                placeholder=\"Question\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer1\">Asnwer 1</Label>\n              <Input\n                id=\"answer1\"\n                type=\"text\"\n                name=\"answer1\"\n                onChange={handleChange}\n                placeholder=\"Answer One\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer2\">Answer 2</Label>\n              <Input\n                id=\"answer2\"\n                type=\"text\"\n                name=\"answer2\"\n                onChange={handleChange}\n                placeholder=\"Answer Two\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"answer3\">Answer 3</Label>\n              <Input\n                id=\"answer3\"\n                type=\"text\"\n                name=\"answer3\"\n                onChange={handleChange}\n                placeholder=\"Answer Three\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"correct\">Correct Answer</Label>\n              <Input\n                id=\"correct\"\n                type=\"text\"\n                name=\"correct\"\n                onChange={(e) => setCorrectAnswer(e.target.value)}\n                placeholder=\"Correct Answer\"\n              />\n            </FormInput>\n            <FormInput>\n              <Label htmlFor=\"time\">Time Limit</Label>\n              <Input\n                id=\"time\"\n                type=\"number\"\n                name=\"time\"\n                onChange={handleChange}\n                placeholder=\"Time Limit\"\n              />\n            </FormInput>\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default CreateQuiz;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentContainer = styled.article`\n  display: flex;\n  align-items: center;\n  margin: 1.25rem 0;\n  width: 40%;\n  justify-content: space-between;\n`;\nconst AssessmentTitle = styled.article``;\nconst AssessmentDuedate = styled.article``;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #ea501a;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/SendMail.js",[],["244","245"],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Home.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/TmHome.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/List.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/QuizPage.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Assignment.js",["246"],"import React from \"react\";\nimport StudentSideBar from \"../components/StudentSideBar\";\n// import assignment from \"../CSS/_studentAssignments.scss\";\nimport { GiSiren } from \"react-icons/gi\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction Assignment() {\n  let navigate = useNavigate();\n  return (\n    <div className=\"asses\">\n      <StudentSideBar />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>Assessments</h1>\n        </div>\n        <div className=\"topContainer\">\n          <div className=\"nOTICE\">\n            <h2>\n              Notice <GiSiren className=\"siren\" />\n            </h2>\n            <h4>Don't be late</h4>\n            <h5>No exceptions will be allowed</h5>\n          </div>\n          <div className=\"searchbaR\">\n            <input type=\"text\" placeholder=\"Search Assessment\" />\n          </div>\n        </div>\n        <div className=\"labeL\">\n          <h1>ASSESSMENTS</h1>\n        </div>\n        <div className=\"assesContainer\">\n          <div className=\"iteM\">\n            <h5>Assesment one</h5>\n            <span>Due to 12/10/22</span>\n            <Link to='/students/assignments/:id'>\n              <span className=\"view\">View</span>\n            </Link>\n\n            \n          </div>\n\n          <div className=\"iteM\">\n            <h5>Assesment one</h5>\n            <span>Due to 12/10/22</span>\n            <Link to='/students/assignments/:id'>\n              <span className=\"view\">View</span>\n            </Link>\n          </div>\n\n          <div className=\"iteM\">\n            <h5>Assesment one</h5>\n            <span>Due to 12/10/22</span>\n            <Link to='/students/assignments/:id'>\n              <span className=\"view\">View</span>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Assignment;\n\n// import styled from \"styled-components\";\n// import StudentSideBar from \"../components/StudentSideBar\";\n\n// const Assignment = () => {\n//   return (\n// <Container>\n//   <StudentSideBar />\n//   <Wrapper>\n//     <Left>\n//       <Title>Notice</Title>\n//       <Instruction>Don't be late</Instruction>\n//       <Instruction>No exceptions will be allowed</Instruction>\n//     </Left>\n//     <Right>\n//       <Assignments>\n//         <AssignTitle>Assignment No: 4</AssignTitle>\n//         <AssignDueDate>Due: 2022-06-27</AssignDueDate>\n//         <AssignViewButton>View</AssignViewButton>\n//       </Assignments>\n//       <Assignments>\n//         <AssignTitle>Assignment No: 7</AssignTitle>\n//         <AssignDueDate>Due: 2022-08-07</AssignDueDate>\n//         <AssignViewButton>View</AssignViewButton>\n//       </Assignments>\n//       <Assignments>\n//         <AssignTitle>Assignment No: 9</AssignTitle>\n//         <AssignDueDate>Due: 2022-10-12</AssignDueDate>\n//         <AssignViewButton>View</AssignViewButton>\n//       </Assignments>\n//       <Assignments>\n//         <AssignTitle>Assignment No: 14</AssignTitle>\n//         <AssignDueDate>Due: 2022-11-10</AssignDueDate>\n//         <AssignViewButton>View</AssignViewButton>\n//       </Assignments>\n//       <Assignments>\n//         <AssignTitle>Assignment No: 16</AssignTitle>\n//         <AssignDueDate>Due: 2022-11-22</AssignDueDate>\n//         <AssignViewButton>View</AssignViewButton>\n//       </Assignments>\n//     </Right>\n//   </Wrapper>\n// </Container>\n//   );\n// };\n\n// export default Assignment;\n\n// const Container = styled.main`\n//   color: #101f3c;\n//   display: flex;\n// `;\n\n// const Wrapper = styled.section`\n//   display: flex;\n//   flex: 7;\n//   padding: 3.75rem;\n// `;\n\n// const Left = styled.article`\n//   flex: 1;\n// `;\n\n// const Title = styled.article`\n//   padding: 0.7rem;\n//   text-align: center;\n//   font-weight: 600;\n//   background-color: #f5f5f5;\n//   margin-bottom: 0.8rem;\n// `;\n\n// const Instruction = styled.p`\n//   text-align: center;\n//   margin-bottom: 0.8rem;\n// `;\n\n// const Right = styled.article`\n//   flex: 3;\n//   padding: 0 1.25rem;\n//   display: flex;\n//   flex-direction: column;\n//   align-items: center;\n//   gap: 1rem;\n// `;\n\n// const Assignments = styled.article`\n//   padding: 0.7rem;\n//   color: gray;\n//   width: 100%;\n//   border: 0.5px solid rgb(230, 227, 227);\n//   display: flex;\n//   justify-content: space-between;\n//   cursor: pointer;\n//   border-radius: 5px;\n//   &:hover {\n//     background-color: #f5f5f5;\n//   }\n// `;\n\n// const AssignTitle = styled.span``;\n\n// const AssignDueDate = styled.span``;\n\n// const AssignViewButton = styled.span`\n//   padding: 3px 8px;\n//   border-radius: 5px;\n//   color: green;\n//   background-color: rgba(0, 128, 0, 0.2);\n// `;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/StudentDashboard.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Single.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/CombineLogin.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Trial.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Assesments.js",["247"],"import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"../components/Sidebar\";\nimport assesment from \"../CSS/_assesment.scss\";\nimport { BiBookAdd } from \"react-icons/bi\";\nimport { MdModeEditOutline } from \"react-icons/md\";\nimport { MdDelete } from \"react-icons/md\";\n\nfunction Assesments() {\n  let navigate = useNavigate();\n  return (\n    <div className=\"asses\">\n      <Sidebar />\n      <div className=\"content\">\n        <div className=\"A-title\">\n          <h1>Assessment</h1>\n        </div>\n        <div className=\"add\">\n          <div>\n            <BiBookAdd className=\"a-icon\" />{\" \"}\n            <span\n              onClick={() => {\n                navigate(\"/newAssessment\");\n              }}\n            >\n              Create New Assessment\n            </span>\n          </div>\n\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Search Assesment\"\n              name=\"search\"\n              className=\"Search\"\n            />\n          </div>\n        </div>\n        <div className=\"as-container\">\n          <div className=\"Assesment\">\n            <span>Assesment 1</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 2</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 3</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 4</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n          <div className=\"Assesment\">\n            <span>Assesment 5</span>\n            <span>\n              <MdModeEditOutline />\n            </span>\n            <span>\n              <MdDelete />\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Assesments;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Test.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/login/Login.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/signup/Register.js",["248","249","250"],"import React, { useState } from \"react\";\nimport \"./signup.css\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport request from \"../../Helpers/requestMethods\";\n\nexport default function Register() {\n  const [inputs, setInputs] = useState({});\n  const [confirmPassword, setConfirmPass] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setInputs({ ...inputs, [name]: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setError(false);\n\n    try {\n      if (inputs.password === confirmPassword) {\n        const { data } = await request.post(\"/students/register\", inputs);\n        inputs && window.location.replace(\"/students/login\");\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"wrapper\">\n        <h1 className=\"header\">Create Account</h1>\n        <p>Fill in the form below</p>\n        <form className=\"registerForm\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"first_name\"\n            placeholder=\"First Name\"\n          />\n\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"last_name\"\n            placeholder=\"Last Name\"\n          />\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"username\"\n            placeholder=\"Username\"\n          />\n\n          <input\n            type=\"text\"\n            onChange={handleChange}\n            name=\"email\"\n            placeholder=\"Email\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={handleChange}\n            name=\"password\"\n            placeholder=\"Password\"\n          />\n\n          <input\n            type=\"password\"\n            onChange={(event) => setConfirmPass(event.target.value)}\n            name=\"confirm password\"\n            placeholder=\"Confirm Password\"\n          />\n\n          <span>\n            {\" \"}\n            By creating an account, I consent to the processing of my personal\n            data in accordance with the <b>PRIVACY POLICY</b>\n          </span>\n          <button className=\"fluid ui button blue\">CREATE</button>\n          <span className=\"mt-2\">\n            Have an account?{\" \"}\n            <Link to=\"/students/login\" className=\"log\">\n              Login\n            </Link>\n          </span>\n        </form>\n      </div>\n    </div>\n  );\n}\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Sidebar.js",["251"],"import React from \"react\";\nimport sidebar from \"../CSS/_sidebar.scss\";\nimport image from \"../assests/images/logo.png\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@radix-ui/react-avatar\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { FaBook } from \"react-icons/fa\";\nimport { MdGrade } from \"react-icons/md\";\nimport { BiLogOutCircle } from \"react-icons/bi\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nfunction Sidebar() {\n  const mentor = useSelector((state) => state.mentor?.currentUser?.mentor)\n  \n  return (\n    <div className=\"side-nav\">\n      <Link to=\"/\">\n        <div className=\"myLogo\">\n          <img src={image} alt=\"wewe\" />\n        </div>\n      </Link>\n\n      <div className=\"prof\">\n        <Avatar>\n          <AvatarImage\n            src=\"https://images.unsplash.com/photo-1492633423870-43d1cd2775eb?&w=128&h=128&dpr=2&q=80\"\n            alt=\"Colm Tuite\"\n            className=\"tESTING\"\n          />\n          <AvatarFallback delayMs={600}>CT</AvatarFallback>\n        </Avatar>\n        <span>{mentor.first_name}</span>\n      </div>\n      <div className=\"icon-container\">\n        <Link to=\"/mentors\">\n          <div className=\"iCon\">\n            <AiFillHome className=\"iCON\" /> <span>Home</span>\n          </div>\n        </Link>\n        <Link to=\"/mentors/assessments\">\n          <div className=\"iCon\">\n            {\" \"}\n            <FaBook className=\"iCON\" /> <span>Assesments</span>\n          </div>\n        </Link>\n\n        <Link to=\"/mentors/grades\">\n          <div className=\"iCon\">\n            {\" \"}\n            <MdGrade className=\"iCON\" /> <span>Grades</span>\n          </div>\n        </Link>\n      </div>\n      <div className=\"logof\">\n        {\" \"}\n        <BiLogOutCircle className=\"iCON\" /> <span>Logout</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/apiCall.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/assessmentSlice.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Subjective.js",["252","253"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Subjective({page, setPage, setPros}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n        \n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setPros(allQuestions)\n    };\n\n\n    // console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container' key={index}>\n                        <h4>Question  {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n       \n    </div>\n  )\n}\n\nexport default Subjective","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Kata.js",["254","255"],"\nimport React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\n\nfunction Kata({page, setPage, setKata}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\"\n            \n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setKata(allQuestions)\n    };\n\n\n    // console.log(allQuestions);\n    \n  return (\n    <div className='question' >\n       \n        \n        <div className='q-form'>\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className='q-container' key={index}>\n                        <h4>Challenge {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n       \n    </div>\n  )\n}\n\nexport default Kata","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Quiz.js",["256","257"],"import React, { useState } from \"react\";\nimport question from '../CSS/_question.scss'\nimport { GoDiffAdded } from 'react-icons/go';\n\nfunction Quiz({page, setPage, setMcq}) {\n    const [allQuestions, setAllQuestions] = useState([\n        { name: \"\", optionA: \"\", optionB: \"\",optionC: \"\",optionD: \"\", correctAns:\"\"},\n      ]);\n\n    const handleAddQuestions = () => {\n        const values = [...allQuestions];\n        values.push({\n            name: \"\",\n            optionA: \"\",\n            optionB: \"\",\n            optionC: \"\",\n            optionD: \"\",\n            correctAns: \"\",\n        });\n        setAllQuestions(values);\n    };\n\n\n    const handleRemoveQuestions = (index) => {\n        const values = [...allQuestions];\n        values.splice(index, 1);\n        setAllQuestions(values);\n    };\n\n    const handleInputChange = (index, event) => {\n        const values = [...allQuestions];\n        const updatedValue = event.target.name;\n        values[index][updatedValue] = event.target.value;\n\n        setAllQuestions(values);\n        setMcq(allQuestions)\n    };\n \n\n    // console.log(allQuestions);\n    \n  return (\n    <div  className=\"question\">\n        <div className=\"q-form\">\n            {allQuestions.length > 0 && (\n                <>\n                {allQuestions.map((field,index)=> (\n                    <div className=\"q-container\" key={index}>\n                        <h4>Question {index +1}</h4>\n                        <input type='text' name='name' placeholder='Enter Question' value={field.name} onChange={(event) => handleInputChange(index,event)}/>\n                        <input type=\"text\" name=\"optionA\" placeholder=\"Enter option A\" value={field.optionA} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionB\" placeholder=\"Enter option B\" value={field.optionB} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionC\" placeholder=\"Enter option C\" value={field.optionC} onChange={(event) =>handleInputChange(index, event) }/>\n                        <input type=\"text\" name=\"optionD\" placeholder=\"Enter option D\" value={field.optionD} onChange={(event) =>handleInputChange(index, event) }/>\n                        <select className='opt' onChange={(event) =>handleInputChange(index, event) } value={field.correctAns} name='correctAns'>\n                          \n                            <option value=\"a\">A</option>\n                            <option value=\"b\">B</option>\n                            <option value=\"ab\">AB</option>\n                            <option value=\"o\">O</option>\n                        </select>\n                    </div>\n                ))}</>\n            )}\n\n        </div>\n        <div className='q-add'> <GoDiffAdded className='q-icon'/> <span onClick={() => handleAddQuestions()}>Add Question</span> </div>\n        \n    </div>\n  )\n}\n\nexport default Quiz","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/data.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/requestMethods.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/shuffleAnswers.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Navbar.js",["258"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport MoringaLogo from \"../assests/images/hackerlogo.png\";\n\nconst Navbar = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <Left>\n          <NavLink to=\"/\">\n            <Logo src={MoringaLogo} alt=\"logo\" />\n          </NavLink>\n        </Left>\n        <Right>\n          <div>\n            <span>LOGIN</span>\n            <ul>\n              <NavLink to='/mentors/login'>\n                <li>Login as TM</li>\n              </NavLink>\n              <NavLink to='/students/login'>\n                <li>Login as Student</li>\n              </NavLink>\n             \n            </ul>\n          </div>\n          <div>\n            <span>REGISTER</span>\n            <ul>\n              <NavLink to='/mentors/register'>\n                <li>Register as TM</li>\n              </NavLink>\n              <NavLink to='/students/register'>\n                <li>Register as Student</li>\n              </NavLink>\n              \n            </ul>\n          </div>\n\n          {/* <Button href=\"/access-account\">Login</Button>\n          <Button href=\"/register\">Register</Button> */}\n        </Right>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Navbar;\n\nconst Container = styled.main`\n  height: 5rem;\n  border-bottom: 0.5px solid rgb(230, 227, 227);\n  display: flex;\n  align-items: center;\n  font-size: 0.875rem;\n  box-sizing: border-box;\n`;\n\nconst Wrapper = styled.section`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  padding: 1.25rem;\n`;\n\nconst Left = styled.article``;\n\nconst Logo = styled.img`\n  width: 10.5rem;\n`;\n\nconst Right = styled.article`\n  display: flex;\n  align-items: center;\n  gap: 1.25rem;\n  div{\n    margin-right:3em;\n    postion:relative;\n    cursor:pointer;\n    &:hover{\n      ul{\n        display:block\n      }\n    }\n    span{\n      font-size: 1.1em;\n      \n      \n    }\n\n    ul{\n      \n      display:none;\n      position:absolute;\n      min-width:100px;\n      z-index:2;\n      background-color: #f5f5f5;\n      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n      &:first-child{\n        padding-top:8px;\n      }\n      li{\n        \n        padding: 10px 16px;\n        cursor:pointer;\n        min-width:100px;\n        display:block;\n        &:hover{\n          background-color: white;\n          color:#EA501A;\n          transform: scale(1.1 1.5s ease)\n          font-weight: 700;\n        }\n      }\n    }\n  }\n`;\n\nconst Button = styled.a`\n  padding: 10px 1rem;\n  font-weight: 600;\n  color: gray;\n  border: none;\n  cursor: pointer;\n  background-color: transparent;\n  &:first-child {\n  }\n  &:last-child {\n    border: 1px solid lightgray;\n    border-radius: 2px;\n  }\n`;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Footer.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/DataTable.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Question.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/StudentSideBar.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/AnswerTable.js",["259"],"import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport styled from \"styled-components\";\n\nconst rows = [\n  {\n    id: 1,\n    name: \"What is the sum of ...\",\n    answer: 2100999,\n    correctAnswer: 2100999,\n    answerThree: 59003,\n    answerFour: 290013,\n  },\n  {\n    id: 2,\n    name: \"What is the sum of ...\",\n    answer: 900,\n    correctAnswer: 9099,\n    answerThree: 5003,\n    answerFour: 2013,\n  },\n  {\n    id: 3,\n    name: \"What is the sum of ...\",\n    answer: 5,\n    correctAnswer: 5,\n    answerThree: 59,\n    answerFour: 3,\n  },\n  {\n    id: 4,\n    name: \"What is the sum of ...\",\n    answer: 9,\n    correctAnswer: 2100999,\n    answerThree: 9003,\n    answerFour: 290013,\n  },\n];\n\nconst AnswerTable = () => {\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Question Id</TableCell>\n            <TableCell>Questions</TableCell>\n            <TableCell>Selected Answer</TableCell>\n            <TableCell>Correct Answer</TableCell>\n            <TableCell>Answer Three</TableCell>\n            <TableCell>Answer Four</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.id}>\n              <TableCell>{row.id}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.answer}</TableCell>\n              <TableCell>{row.correctAnswer}</TableCell>\n              <TableCell>{row.answerThree}</TableCell>\n              <TableCell>{row.answerFour}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default AnswerTable;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Info.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/auth.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/dataTableSource.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/answer/Answer.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/New.js",["260","261"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport styled from \"styled-components\";\nimport request from \"../Helpers/requestMethods\";\n\nimport Sidebar from \"./Sidebar\";\n\nconst New = ({ inputs, title }) => {\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n  const [formData, setFormData] = useState({\n    question: \"\",\n    instructions: \"\",\n    answer: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    let newData = {\n      question: formData.question,\n      instructions: formData.instructions,\n      answer: formData.answer,\n      assessment_id: assessmentId,\n    };\n    try {\n      const { data } = await request.post(\"/kataas\", newData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <Sidebar />\n      <Wrapper>\n        <Top>\n          <Title>{title}</Title>\n          <AssessmentContainer>\n            <AssessmentTitle>{assessment.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment.duedate}</AssessmentDuedate>\n          </AssessmentContainer>\n        </Top>\n\n        <Bottom>\n          <BottomForm onSubmit={handleSubmit}>\n            {inputs.map((input) => (\n              <FormInput key={input.id}>\n                <Label>{input.label}</Label>\n                <Input\n                  type={input.type}\n                  name={input.name}\n                  onChange={handleChange}\n                  placeholder={input.placeholder}\n                />\n              </FormInput>\n            ))}\n\n            <Button>Submit</Button>\n          </BottomForm>\n        </Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default New;\n\nconst Container = styled.main`\n  display: flex;\n`;\n\nconst Wrapper = styled.section`\n  flex: 8;\n  box-sizing: border-box;\n`;\n\nconst Top = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  color: gray;\n  font-size: 1.25rem;\n`;\n\nconst Bottom = styled.section`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentContainer = styled.article`\n  display: flex;\n  align-items: center;\n  margin: 1.25rem 0;\n  width: 40%;\n  justify-content: space-between;\n`;\nconst AssessmentTitle = styled.article``;\nconst AssessmentDuedate = styled.article``;\n\nconst BottomForm = styled.form`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  flex-direction: column;\n  gap: 1.875rem;\n  justify-content: space-around;\n`;\n\nconst FormInput = styled.article`\n  flex: 1;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  align-item: center;\n  gap: 10px;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  border: none;\n  padding: 10px 0;\n  outline: none;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst Button = styled.button`\n  width: 9.375rem;\n  padding: 10px;\n  border: none;\n  background-color: #ea501a;\n  color: white;\n  font-weight: 600;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/mentorSlice.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/redux/studentSlice.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/Assessments.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/SingleAssessment.js",["262","263"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport SingleAssessmentSidebar from \"../components/SingleAssessmentSidebar\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { shuffleAnswers } from \"../Helpers/shuffleAnswers\";\n\nconst SingleAssessment = () => {\n  const location = useLocation();\n  const assessmentId = location.pathname.split(\"/\")[3];\n  const [isQuizExpanded, setQuizExpanded] = useState(false);\n  const assessment = useSelector((state) =>\n    state.assessment?.assessments.find(\n      (assessment) => assessment.id == assessmentId\n    )\n  );\n\n  const expand = () => {\n    setQuizExpanded((isQuizExpanded) => !isQuizExpanded);\n  };\n\n  return (\n    <Container>\n      <SingleAssessmentSidebar />\n      <AssessmentContainer>\n        <Top>\n          <AssessmentInfo>\n            <AssessmentTitle>{assessment?.title}</AssessmentTitle>\n            <AssessmentDuedate>{assessment?.duedate}</AssessmentDuedate>\n          </AssessmentInfo>\n        </Top>\n        <Bottom>\n          <TaskContainer>\n            <Task onClick={expand}>\n              <ArrowForwardIosIcon\n                on\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Questions</Title>\n            </Task>\n            {isQuizExpanded && (\n              <QuestionContainer>\n                {assessment?.quizzes?.map((question) => {\n                  const answers = shuffleAnswers(question);\n                  return (\n                    <Question>\n                      <Prompt>{question.question}</Prompt>\n                      {answers.map((answer) => (\n                        <Answer>{answer}</Answer>\n                      ))}\n                    </Question>\n                  );\n                })}\n              </QuestionContainer>\n            )}\n          </TaskContainer>\n          <TaskContainer>\n            <Task>\n              <ArrowForwardIosIcon\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Katas</Title>\n            </Task>\n          </TaskContainer>\n          <TaskContainer>\n            <Task>\n              <ArrowForwardIosIcon\n                style={{ color: \"#ea501a\", fontSize: \"0.875rem\" }}\n              />\n              <Title>Prose</Title>\n            </Task>\n          </TaskContainer>\n        </Bottom>\n      </AssessmentContainer>\n    </Container>\n  );\n};\n\nexport default SingleAssessment;\n\nconst Container = styled.main`\n  display: flex;\n  width: 100%;\n  position: relative;\n`;\n\nconst AssessmentContainer = styled.section`\n  width: 70vw;\n  min-height: 100vh;\n  margin: 0 auto;\n`;\n\nconst Top = styled.article``;\nconst Bottom = styled.article`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n`;\n\nconst AssessmentTitle = styled.article``;\n\nconst AssessmentInfo = styled.article`\n  padding: 1.25rem;\n  margin: 1.25rem;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -webkit-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n  -moz-box-shadow: 2px 4px 10px 1px rgba(0, 0, 0, 0.47);\n`;\n\nconst AssessmentDuedate = styled.article``;\n\nconst TaskContainer = styled.section``;\n\nconst Task = styled.article`\n  display: flex;\n  align-items: center;\n  background-color: #f5f5f5;\n  gap: 5px;\n  cursor: pointer;\n  padding: 0.8rem;\n  margin: 1.25rem;\n`;\n\nconst Title = styled.span`\n  font-size: 1rem;\n  font-weight: bold;\n  color: #101f3c;\n`;\n\nconst QuestionContainer = styled.article``;\nconst Question = styled.article`\n  border: 0.5px solid lightgray;\n  padding: 0.8rem;\n  margin: 1.25rem;\n`;\n\nconst Prompt = styled.h3`\n  background-color: #lightgray;\n  padding: 0.8rem;\n  margin: 0.25rem;\n  color: gray;\n  cursor: pointer;\n`;\n\nconst Answer = styled.article`\n  background-color: #f5f5f5;\n  padding: 0.8rem;\n  margin: 0.25rem;\n  cursor: pointer;\n  color: gray;\n`;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/assessmentDataTableSource.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/createFormSource.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/Helpers/loginSource.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/AssessmentDataTable.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/SingleAssessmentSidebar.js",["264","265","266"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport image from \"../assests/images/logo.png\";\n\nconst SingleAssessmentSidebar = () => {\n  return (\n    <Container>\n      <Wrapper>\n        <Top>\n          <Link to=\"/\">\n            <Logo src={image} alt=\"logo\" />\n          </Link>\n        </Top>\n        <Center></Center>\n        <Bottom></Bottom>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default SingleAssessmentSidebar;\n\nconst Container = styled.main`\n  width: 10vw;\n  background-color: #101f3c;\n  border-right: 0.5px solid rgb(230, 227, 227);\n  height: 100vh;\n  color: #fff;\n  // position: fixed;\n  padding: 3.75rem;\n`;\n\nconst Wrapper = styled.section`\n  width: 100%;\n`;\nconst Logo = styled.img`\n  width: 12.5rem;\n`;\nconst Top = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Center = styled.section``;\n\nconst List = styled.ul``;\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 10px 5px;\n  &:hover {\n    background-color: #202e49;\n  }\n`;\n\nconst ItemSpan = styled.span`\n  font-size: 13px;\n  font-weight: 600;\n  margin-left: 10px;\n`;\n\nconst Bottom = styled.section`\n  padding: 0.625rem;\n  position: absolute;\n  bottom: 0;\n`;\n","/home/moringa/Development/rails/Moringa-Hackerank/client/src/pages/StudentAssignment.js",["267","268","269","270","271","272"],"import React from 'react'\nimport { Link, Route, Router, Routes } from 'react-router-dom'\nimport Skata from '../components/Skata'\nimport Spros from '../components/Spros'\nimport Squiz from '../components/Squiz'\nimport StudentSideBar from '../components/StudentSideBar'\nimport Test from './Test'\n\n\nfunction StudentAssignment() {\n  return (\n    <div className='asses'>\n      <StudentSideBar/>\n      <div className='obscure'>\n        <div className='leFT'>\n          <div className='miniNav'>\n            <Link to='/students/assignments/:id/quiz'>\n              <span>QUIZ</span>\n            </Link>\n            <Link to='/students/assignments/:id/kata'>\n              <span>KATA</span>\n            </Link>\n            <Link to='/students/assignments/:id/pros'>\n              <span>PROS</span>\n            </Link>\n            \n            \n          </div>\n        </div>\n        <div className='riGHT'>\n          <Squiz/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default StudentAssignment","/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Skata.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Squiz.js",[],"/home/moringa/Development/rails/Moringa-Hackerank/client/src/components/Spros.js",[],{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":19,"column":8,"nodeType":"279","messageId":"280","endLine":19,"endColumn":20},{"ruleId":"277","severity":1,"message":"281","line":27,"column":8,"nodeType":"279","messageId":"280","endLine":27,"endColumn":25},{"ruleId":"277","severity":1,"message":"282","line":105,"column":7,"nodeType":"279","messageId":"280","endLine":105,"endColumn":13},{"ruleId":"277","severity":1,"message":"283","line":128,"column":7,"nodeType":"279","messageId":"280","endLine":128,"endColumn":17},{"ruleId":"284","severity":1,"message":"285","line":16,"column":37,"nodeType":"286","messageId":"287","endLine":16,"endColumn":39},{"ruleId":"277","severity":1,"message":"288","line":44,"column":15,"nodeType":"279","messageId":"280","endLine":44,"endColumn":19},{"ruleId":"273","replacedBy":"289"},{"ruleId":"275","replacedBy":"290"},{"ruleId":"277","severity":1,"message":"291","line":8,"column":7,"nodeType":"279","messageId":"280","endLine":8,"endColumn":15},{"ruleId":"277","severity":1,"message":"292","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":17},{"ruleId":"277","severity":1,"message":"293","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":13},{"ruleId":"277","severity":1,"message":"294","line":10,"column":10,"nodeType":"279","messageId":"280","endLine":10,"endColumn":15},{"ruleId":"277","severity":1,"message":"288","line":23,"column":17,"nodeType":"279","messageId":"280","endLine":23,"endColumn":21},{"ruleId":"277","severity":1,"message":"295","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":15},{"ruleId":"277","severity":1,"message":"296","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":16},{"ruleId":"277","severity":1,"message":"297","line":22,"column":11,"nodeType":"279","messageId":"280","endLine":22,"endColumn":32},{"ruleId":"277","severity":1,"message":"296","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":16},{"ruleId":"277","severity":1,"message":"297","line":22,"column":11,"nodeType":"279","messageId":"280","endLine":22,"endColumn":32},{"ruleId":"277","severity":1,"message":"296","line":2,"column":8,"nodeType":"279","messageId":"280","endLine":2,"endColumn":16},{"ruleId":"277","severity":1,"message":"297","line":24,"column":11,"nodeType":"279","messageId":"280","endLine":24,"endColumn":32},{"ruleId":"277","severity":1,"message":"298","line":120,"column":7,"nodeType":"279","messageId":"280","endLine":120,"endColumn":13},{"ruleId":"277","severity":1,"message":"299","line":8,"column":8,"nodeType":"279","messageId":"280","endLine":8,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":15,"column":37,"nodeType":"286","messageId":"287","endLine":15,"endColumn":39},{"ruleId":"277","severity":1,"message":"288","line":40,"column":15,"nodeType":"279","messageId":"280","endLine":40,"endColumn":19},{"ruleId":"277","severity":1,"message":"300","line":5,"column":23,"nodeType":"279","messageId":"280","endLine":5,"endColumn":32},{"ruleId":"284","severity":1,"message":"285","line":15,"column":37,"nodeType":"286","messageId":"287","endLine":15,"endColumn":39},{"ruleId":"277","severity":1,"message":"301","line":48,"column":7,"nodeType":"279","messageId":"280","endLine":48,"endColumn":11},{"ruleId":"277","severity":1,"message":"302","line":50,"column":7,"nodeType":"279","messageId":"280","endLine":50,"endColumn":11},{"ruleId":"277","severity":1,"message":"303","line":60,"column":7,"nodeType":"279","messageId":"280","endLine":60,"endColumn":15},{"ruleId":"277","severity":1,"message":"304","line":2,"column":16,"nodeType":"279","messageId":"280","endLine":2,"endColumn":21},{"ruleId":"277","severity":1,"message":"305","line":2,"column":23,"nodeType":"279","messageId":"280","endLine":2,"endColumn":29},{"ruleId":"277","severity":1,"message":"306","line":2,"column":31,"nodeType":"279","messageId":"280","endLine":2,"endColumn":37},{"ruleId":"277","severity":1,"message":"307","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":13},{"ruleId":"277","severity":1,"message":"308","line":4,"column":8,"nodeType":"279","messageId":"280","endLine":4,"endColumn":13},{"ruleId":"277","severity":1,"message":"309","line":7,"column":8,"nodeType":"279","messageId":"280","endLine":7,"endColumn":12},"no-native-reassign",["310"],"no-negated-in-lhs",["311"],"no-unused-vars","'CombineLogin' is defined but never used.","Identifier","unusedVar","'StudentAssignment' is defined but never used.","'Bottom' is assigned a value but never used.","'BottomForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.",["310"],["311"],"'navigate' is assigned a value but never used.","'assesment' is defined but never used.","'axios' is defined but never used.","'error' is assigned a value but never used.","'sidebar' is defined but never used.","'question' is defined but never used.","'handleRemoveQuestions' is assigned a value but never used.","'Button' is assigned a value but never used.","'styled' is defined but never used.","'useParams' is defined but never used.","'List' is assigned a value but never used.","'Item' is assigned a value but never used.","'ItemSpan' is assigned a value but never used.","'Route' is defined but never used.","'Router' is defined but never used.","'Routes' is defined but never used.","'Skata' is defined but never used.","'Spros' is defined but never used.","'Test' is defined but never used.","no-global-assign","no-unsafe-negation"]