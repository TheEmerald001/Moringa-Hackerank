{"ast":null,"code":"import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, stringify, COMMENT, rulesheet, middleware, prefixer, serialize, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\n\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\n\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\n\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = element.parent === children[0]; // in nested rules comments become children of the \"auto-inserted\" rule\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? children[0].children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if (key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport default createCache;","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/node_modules/@emotion/cache/dist/emotion-cache.browser.esm.js"],"names":["StyleSheet","dealloc","alloc","next","token","from","peek","delimit","slice","position","stringify","COMMENT","rulesheet","middleware","prefixer","serialize","compile","identifierWithPointTracking","begin","points","index","previous","character","toRules","parsed","length","getRules","value","fixedElements","WeakMap","compat","element","type","parent","isImplicitRule","column","line","props","charCodeAt","get","set","rules","parentRules","i","k","j","replace","removeLabel","ignoreFlag","isIgnoringComment","children","indexOf","createUnsafeSelectorsAlarm","cache","unsafePseudoClasses","match","isNested","commentContainer","node","forEach","unsafePseudoClass","console","error","split","isImportRule","isPrependedWithRegularRules","nullifyElement","incorrectImportAlarm","defaultStylisPlugins","createCache","options","key","process","env","NODE_ENV","Error","ssrStyles","document","querySelectorAll","Array","prototype","call","dataEmotionAttribute","getAttribute","head","appendChild","setAttribute","stylisPlugins","test","inserted","container","nodesToHydrate","attrib","push","_insert","omnipresentPlugins","currentSheet","finalizingPlugins","root","insert","rule","serializer","concat","stylis","styles","selector","serialized","sheet","shouldCache","map","undefined","name","nonce","speedy","prepend","insertionPoint","registered","hydrate"],"mappings":"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","sourcesContent":["import { StyleSheet } from '@emotion/sheet';\nimport { dealloc, alloc, next, token, from, peek, delimit, slice, position, stringify, COMMENT, rulesheet, middleware, prefixer, serialize, compile } from 'stylis';\nimport '@emotion/weak-memoize';\nimport '@emotion/memoize';\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n  var previous = 0;\n  var character = 0;\n\n  while (true) {\n    previous = character;\n    character = peek(); // &\\f\n\n    if (previous === 38 && character === 12) {\n      points[index] = 1;\n    }\n\n    if (token(character)) {\n      break;\n    }\n\n    next();\n  }\n\n  return slice(begin, position);\n};\n\nvar toRules = function toRules(parsed, points) {\n  // pretend we've started with a comma\n  var index = -1;\n  var character = 44;\n\n  do {\n    switch (token(character)) {\n      case 0:\n        // &\\f\n        if (character === 38 && peek() === 12) {\n          // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n          // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n          // and when it should just concatenate the outer and inner selectors\n          // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n          points[index] = 1;\n        }\n\n        parsed[index] += identifierWithPointTracking(position - 1, points, index);\n        break;\n\n      case 2:\n        parsed[index] += delimit(character);\n        break;\n\n      case 4:\n        // comma\n        if (character === 44) {\n          // colon\n          parsed[++index] = peek() === 58 ? '&\\f' : '';\n          points[index] = parsed[index].length;\n          break;\n        }\n\n      // fallthrough\n\n      default:\n        parsed[index] += from(character);\n    }\n  } while (character = next());\n\n  return parsed;\n};\n\nvar getRules = function getRules(value, points) {\n  return dealloc(toRules(alloc(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\n\n\nvar fixedElements = /* #__PURE__ */new WeakMap();\nvar compat = function compat(element) {\n  if (element.type !== 'rule' || !element.parent || // positive .length indicates that this rule contains pseudo\n  // negative .length indicates that this rule has been already prefixed\n  element.length < 1) {\n    return;\n  }\n\n  var value = element.value,\n      parent = element.parent;\n  var isImplicitRule = element.column === parent.column && element.line === parent.line;\n\n  while (parent.type !== 'rule') {\n    parent = parent.parent;\n    if (!parent) return;\n  } // short-circuit for the simplest case\n\n\n  if (element.props.length === 1 && value.charCodeAt(0) !== 58\n  /* colon */\n  && !fixedElements.get(parent)) {\n    return;\n  } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n  // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n\n\n  if (isImplicitRule) {\n    return;\n  }\n\n  fixedElements.set(element, true);\n  var points = [];\n  var rules = getRules(value, points);\n  var parentRules = parent.props;\n\n  for (var i = 0, k = 0; i < rules.length; i++) {\n    for (var j = 0; j < parentRules.length; j++, k++) {\n      element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n    }\n  }\n};\nvar removeLabel = function removeLabel(element) {\n  if (element.type === 'decl') {\n    var value = element.value;\n\n    if ( // charcode for l\n    value.charCodeAt(0) === 108 && // charcode for b\n    value.charCodeAt(2) === 98) {\n      // this ignores label\n      element[\"return\"] = '';\n      element.value = '';\n    }\n  }\n};\nvar ignoreFlag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n\nvar isIgnoringComment = function isIgnoringComment(element) {\n  return element.type === 'comm' && element.children.indexOf(ignoreFlag) > -1;\n};\n\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n  return function (element, index, children) {\n    if (element.type !== 'rule' || cache.compat) return;\n    var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n\n    if (unsafePseudoClasses) {\n      var isNested = element.parent === children[0]; // in nested rules comments become children of the \"auto-inserted\" rule\n      //\n      // considering this input:\n      // .a {\n      //   .b /* comm */ {}\n      //   color: hotpink;\n      // }\n      // we get output corresponding to this:\n      // .a {\n      //   & {\n      //     /* comm */\n      //     color: hotpink;\n      //   }\n      //   .b {}\n      // }\n\n      var commentContainer = isNested ? children[0].children : // global rule at the root level\n      children;\n\n      for (var i = commentContainer.length - 1; i >= 0; i--) {\n        var node = commentContainer[i];\n\n        if (node.line < element.line) {\n          break;\n        } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n        // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n        // this will also match inputs like this:\n        // .a {\n        //   /* comm */\n        //   .b {}\n        // }\n        //\n        // but that is fine\n        //\n        // it would be the easiest to change the placement of the comment to be the first child of the rule:\n        // .a {\n        //   .b { /* comm */ }\n        // }\n        // with such inputs we wouldn't have to search for the comment at all\n        // TODO: consider changing this comment placement in the next major version\n\n\n        if (node.column < element.column) {\n          if (isIgnoringComment(node)) {\n            return;\n          }\n\n          break;\n        }\n      }\n\n      unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n        console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n      });\n    }\n  };\n};\n\nvar isImportRule = function isImportRule(element) {\n  return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\n\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n  for (var i = index - 1; i >= 0; i--) {\n    if (!isImportRule(children[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\n\n\nvar nullifyElement = function nullifyElement(element) {\n  element.type = '';\n  element.value = '';\n  element[\"return\"] = '';\n  element.children = '';\n  element.props = '';\n};\n\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n  if (!isImportRule(element)) {\n    return;\n  }\n\n  if (element.parent) {\n    console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n    nullifyElement(element);\n  } else if (isPrependedWithRegularRules(index, children)) {\n    console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n    nullifyElement(element);\n  }\n};\n\nvar defaultStylisPlugins = [prefixer];\n\nvar createCache = function createCache(options) {\n  var key = options.key;\n\n  if (process.env.NODE_ENV !== 'production' && !key) {\n    throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + \"If multiple caches share the same key they might \\\"fight\\\" for each other's style elements.\");\n  }\n\n  if ( key === 'css') {\n    var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n    // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n    // note this very very intentionally targets all style elements regardless of the key to ensure\n    // that creating a cache works inside of render of a React component\n\n    Array.prototype.forEach.call(ssrStyles, function (node) {\n      // we want to only move elements which have a space in the data-emotion attribute value\n      // because that indicates that it is an Emotion 11 server-side rendered style elements\n      // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n      // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n      // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n      // will not result in the Emotion 10 styles being destroyed\n      var dataEmotionAttribute = node.getAttribute('data-emotion');\n\n      if (dataEmotionAttribute.indexOf(' ') === -1) {\n        return;\n      }\n      document.head.appendChild(node);\n      node.setAttribute('data-s', '');\n    });\n  }\n\n  var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {};\n  var container;\n  var nodesToHydrate = [];\n\n  {\n    container = options.container || document.head;\n    Array.prototype.forEach.call( // this means we will ignore elements which don't have a space in them which\n    // means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n    document.querySelectorAll(\"style[data-emotion^=\\\"\" + key + \" \\\"]\"), function (node) {\n      var attrib = node.getAttribute(\"data-emotion\").split(' '); // $FlowFixMe\n\n      for (var i = 1; i < attrib.length; i++) {\n        inserted[attrib[i]] = true;\n      }\n\n      nodesToHydrate.push(node);\n    });\n  }\n\n  var _insert;\n\n  var omnipresentPlugins = [compat, removeLabel];\n\n  if (process.env.NODE_ENV !== 'production') {\n    omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n      get compat() {\n        return cache.compat;\n      }\n\n    }), incorrectImportAlarm);\n  }\n\n  {\n    var currentSheet;\n    var finalizingPlugins = [stringify, process.env.NODE_ENV !== 'production' ? function (element) {\n      if (!element.root) {\n        if (element[\"return\"]) {\n          currentSheet.insert(element[\"return\"]);\n        } else if (element.value && element.type !== COMMENT) {\n          // insert empty rule in non-production environments\n          // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n          currentSheet.insert(element.value + \"{}\");\n        }\n      }\n    } : rulesheet(function (rule) {\n      currentSheet.insert(rule);\n    })];\n    var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n\n    var stylis = function stylis(styles) {\n      return serialize(compile(styles), serializer);\n    };\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      currentSheet = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        currentSheet = {\n          insert: function insert(rule) {\n            sheet.insert(rule + serialized.map);\n          }\n        };\n      }\n\n      stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[serialized.name] = true;\n      }\n    };\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy,\n      prepend: options.prepend,\n      insertionPoint: options.insertionPoint\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  cache.sheet.hydrate(nodesToHydrate);\n  return cache;\n};\n\nexport default createCache;\n"]},"metadata":{},"sourceType":"module"}