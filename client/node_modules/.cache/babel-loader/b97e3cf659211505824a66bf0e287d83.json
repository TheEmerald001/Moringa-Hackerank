{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"components\", \"componentsProps\", \"colSpan\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelId\", \"labelRowsPerPage\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"selectId\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport TablePaginationActionsUnstyled from './TablePaginationActionsUnstyled';\nimport { getTablePaginationUnstyledUtilityClass } from './tablePaginationUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}â€“${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUnstyledUtilityClass, {});\n};\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Unstyled table pagination](https://mui.com/base/react-table-pagination/)\n *\n * API:\n *\n * - [TablePaginationUnstyled API](https://mui.com/base/api/table-pagination-unstyled/)\n */\n\n\nconst TablePaginationUnstyled = /*#__PURE__*/React.forwardRef(function TablePaginationUnstyled(props, ref) {\n  var _ref, _components$Select, _components$Actions, _components$MenuItem, _components$SelectLab, _components$Displayed, _components$Toolbar, _components$Spacer;\n\n  const {\n    component,\n    components = {},\n    componentsProps = {},\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n\n  if (!component || component === 'td' || !isHostComponent(component)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'td';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = (_components$Select = components.Select) != null ? _components$Select : 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: componentsProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: e => onRowsPerPageChange && onRowsPerPageChange(e),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = (_components$Actions = components.Actions) != null ? _components$Actions : TablePaginationActionsUnstyled;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: componentsProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = (_components$MenuItem = components.MenuItem) != null ? _components$MenuItem : 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: componentsProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = (_components$SelectLab = components.SelectLabel) != null ? _components$SelectLab : 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: componentsProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = (_components$Displayed = components.DisplayedRows) != null ? _components$Displayed : 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: componentsProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = (_components$Toolbar = components.Toolbar) != null ? _components$Toolbar : 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: componentsProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = (_components$Spacer = components.Spacer) != null ? _components$Spacer : 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: componentsProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsxs(Toolbar, _extends({}, toolbarProps, {\n      children: [/*#__PURE__*/_jsx(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, _extends({}, selectLabelProps, {\n        children: labelRowsPerPage\n      })), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, _extends({}, selectProps, {\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, _extends({}, menuItemProps, {\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(DisplayedRows, _extends({}, displayedRowsProps, {\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      })), /*#__PURE__*/_jsx(Actions, _extends({}, actionsProps))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Actions: PropTypes.elementType,\n    DisplayedRows: PropTypes.elementType,\n    MenuItem: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Select: PropTypes.elementType,\n    SelectLabel: PropTypes.elementType,\n    Spacer: PropTypes.elementType,\n    Toolbar: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}â€“${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePaginationUnstyled is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string\n} : void 0;\nexport default TablePaginationUnstyled;","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/base/TablePaginationUnstyled/TablePaginationUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","unstable_useId","useId","chainPropTypes","integerPropType","useSlotProps","composeClasses","isHostComponent","TablePaginationActionsUnstyled","getTablePaginationUnstyledUtilityClass","jsx","_jsx","createElement","_createElement","jsxs","_jsxs","defaultLabelDisplayedRows","from","to","count","defaultGetAriaLabel","type","useUtilityClasses","slots","root","toolbar","spacer","selectLabel","select","input","selectIcon","menuItem","displayedRows","actions","TablePaginationUnstyled","forwardRef","props","ref","_ref","_components$Select","_components$Actions","_components$MenuItem","_components$SelectLab","_components$Displayed","_components$Toolbar","_components$Spacer","component","components","componentsProps","colSpan","colSpanProp","getItemAriaLabel","labelDisplayedRows","labelId","labelIdProp","labelRowsPerPage","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","selectId","selectIdProp","other","ownerState","classes","getLabelDisplayedRowsTo","Math","min","Root","rootProps","elementType","externalSlotProps","externalForwardedProps","additionalProps","className","Select","selectProps","value","id","onChange","e","toString","filter","Boolean","join","undefined","Actions","actionsProps","MenuItem","menuItemProps","SelectLabel","selectLabelProps","DisplayedRows","displayedRowsProps","Toolbar","toolbarProps","Spacer","spacerProps","children","length","map","rowsPerPageOption","key","label","process","env","NODE_ENV","propTypes","node","number","shape","oneOfType","func","object","isRequired","string","newLastPage","max","ceil","Error","arrayOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"component\", \"components\", \"componentsProps\", \"colSpan\", \"count\", \"getItemAriaLabel\", \"labelDisplayedRows\", \"labelId\", \"labelRowsPerPage\", \"onPageChange\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"selectId\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, chainPropTypes, integerPropType } from '@mui/utils';\nimport { useSlotProps } from '../utils';\nimport composeClasses from '../composeClasses';\nimport isHostComponent from '../utils/isHostComponent';\nimport TablePaginationActionsUnstyled from './TablePaginationActionsUnstyled';\nimport { getTablePaginationUnstyledUtilityClass } from './tablePaginationUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}â€“${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\n\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\n\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUnstyledUtilityClass, {});\n};\n/**\n * A pagination for tables.\n *\n * Demos:\n *\n * - [Unstyled table pagination](https://mui.com/base/react-table-pagination/)\n *\n * API:\n *\n * - [TablePaginationUnstyled API](https://mui.com/base/api/table-pagination-unstyled/)\n */\n\n\nconst TablePaginationUnstyled = /*#__PURE__*/React.forwardRef(function TablePaginationUnstyled(props, ref) {\n  var _ref, _components$Select, _components$Actions, _components$MenuItem, _components$SelectLab, _components$Displayed, _components$Toolbar, _components$Spacer;\n\n  const {\n    component,\n    components = {},\n    componentsProps = {},\n    colSpan: colSpanProp,\n    count,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelId: labelIdProp,\n    labelRowsPerPage = 'Rows per page:',\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    selectId: selectIdProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses();\n  let colSpan;\n\n  if (!component || component === 'td' || !isHostComponent(component)) {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n\n  const selectId = useId(selectIdProp);\n  const labelId = useId(labelIdProp);\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'td';\n  const rootProps = useSlotProps({\n    elementType: Root,\n    externalSlotProps: componentsProps.root,\n    externalForwardedProps: other,\n    additionalProps: {\n      colSpan,\n      ref\n    },\n    ownerState,\n    className: classes.root\n  });\n  const Select = (_components$Select = components.Select) != null ? _components$Select : 'select';\n  const selectProps = useSlotProps({\n    elementType: Select,\n    externalSlotProps: componentsProps.select,\n    additionalProps: {\n      value: rowsPerPage,\n      id: selectId,\n      onChange: e => onRowsPerPageChange && onRowsPerPageChange(e),\n      'aria-label': rowsPerPage.toString(),\n      'aria-labelledby': [labelId, selectId].filter(Boolean).join(' ') || undefined\n    },\n    ownerState,\n    className: classes.select\n  });\n  const Actions = (_components$Actions = components.Actions) != null ? _components$Actions : TablePaginationActionsUnstyled;\n  const actionsProps = useSlotProps({\n    elementType: Actions,\n    externalSlotProps: componentsProps.actions,\n    additionalProps: {\n      page,\n      rowsPerPage,\n      count,\n      onPageChange,\n      getItemAriaLabel\n    },\n    ownerState,\n    className: classes.actions\n  });\n  const MenuItem = (_components$MenuItem = components.MenuItem) != null ? _components$MenuItem : 'option';\n  const menuItemProps = useSlotProps({\n    elementType: MenuItem,\n    externalSlotProps: componentsProps.menuItem,\n    additionalProps: {\n      value: undefined\n    },\n    ownerState,\n    className: classes.menuItem\n  });\n  const SelectLabel = (_components$SelectLab = components.SelectLabel) != null ? _components$SelectLab : 'p';\n  const selectLabelProps = useSlotProps({\n    elementType: SelectLabel,\n    externalSlotProps: componentsProps.selectLabel,\n    additionalProps: {\n      id: labelId\n    },\n    ownerState,\n    className: classes.selectLabel\n  });\n  const DisplayedRows = (_components$Displayed = components.DisplayedRows) != null ? _components$Displayed : 'p';\n  const displayedRowsProps = useSlotProps({\n    elementType: DisplayedRows,\n    externalSlotProps: componentsProps.displayedRows,\n    ownerState,\n    className: classes.displayedRows\n  });\n  const Toolbar = (_components$Toolbar = components.Toolbar) != null ? _components$Toolbar : 'div';\n  const toolbarProps = useSlotProps({\n    elementType: Toolbar,\n    externalSlotProps: componentsProps.toolbar,\n    ownerState,\n    className: classes.toolbar\n  });\n  const Spacer = (_components$Spacer = components.Spacer) != null ? _components$Spacer : 'div';\n  const spacerProps = useSlotProps({\n    elementType: Spacer,\n    externalSlotProps: componentsProps.spacer,\n    ownerState,\n    className: classes.spacer\n  });\n  return /*#__PURE__*/_jsx(Root, _extends({}, rootProps, {\n    children: /*#__PURE__*/_jsxs(Toolbar, _extends({}, toolbarProps, {\n      children: [/*#__PURE__*/_jsx(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(SelectLabel, _extends({}, selectLabelProps, {\n        children: labelRowsPerPage\n      })), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(Select, _extends({}, selectProps, {\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItem, _extends({}, menuItemProps, {\n          key: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: typeof rowsPerPageOption !== 'number' && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }), typeof rowsPerPageOption !== 'number' && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      })), /*#__PURE__*/_jsx(DisplayedRows, _extends({}, displayedRowsProps, {\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      })), /*#__PURE__*/_jsx(Actions, _extends({}, actionsProps))]\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Actions: PropTypes.elementType,\n    DisplayedRows: PropTypes.elementType,\n    MenuItem: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Select: PropTypes.elementType,\n    SelectLabel: PropTypes.elementType,\n    Spacer: PropTypes.elementType,\n    Toolbar: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    actions: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    displayedRows: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    menuItem: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    select: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    selectLabel: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    spacer: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    toolbar: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type: ItemAriaLabelType) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }: LabelDisplayedRowsArgs) {\n   *   return `${from}â€“${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Id of the label element within the pagination.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n\n    if (count === -1) {\n      return null;\n    }\n\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePaginationUnstyled is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n\n  /**\n   * Id of the select element within the pagination.\n   */\n  selectId: PropTypes.string\n} : void 0;\nexport default TablePaginationUnstyled;"]},"metadata":{},"sourceType":"module"}