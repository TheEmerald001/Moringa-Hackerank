{"ast":null,"code":"import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/hooks/features/selection/gridSelectionSelector.js"],"names":["createSelector","gridRowsLookupSelector","gridSelectionStateSelector","state","selection","selectedGridRowsCountSelector","length","selectedGridRowsSelector","selectedRows","rowsLookup","Map","map","id","selectedIdsLookupSelector","reduce","lookup","rowId"],"mappings":"AAAA,SAASA,cAAT,QAA+B,+BAA/B;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA,OAAO,MAAMC,0BAA0B,GAAGC,KAAK,IAAIA,KAAK,CAACC,SAAlD;AACP,OAAO,MAAMC,6BAA6B,GAAGL,cAAc,CAACE,0BAAD,EAA6BE,SAAS,IAAIA,SAAS,CAACE,MAApD,CAApD;AACP,OAAO,MAAMC,wBAAwB,GAAGP,cAAc,CAACE,0BAAD,EAA6BD,sBAA7B,EAAqD,CAACO,YAAD,EAAeC,UAAf,KAA8B,IAAIC,GAAJ,CAAQF,YAAY,CAACG,GAAb,CAAiBC,EAAE,IAAI,CAACA,EAAD,EAAKH,UAAU,CAACG,EAAD,CAAf,CAAvB,CAAR,CAAnF,CAA/C;AACP,OAAO,MAAMC,yBAAyB,GAAGb,cAAc,CAACE,0BAAD,EAA6BE,SAAS,IAAIA,SAAS,CAACU,MAAV,CAAiB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnID,EAAAA,MAAM,CAACC,KAAD,CAAN,GAAgBA,KAAhB;AACA,SAAOD,MAAP;AACD,CAHgG,EAG9F,EAH8F,CAA1C,CAAhD","sourcesContent":["import { createSelector } from '../../../utils/createSelector';\nimport { gridRowsLookupSelector } from '../rows/gridRowsSelector';\nexport const gridSelectionStateSelector = state => state.selection;\nexport const selectedGridRowsCountSelector = createSelector(gridSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelector(gridSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelector(gridSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));"]},"metadata":{},"sourceType":"module"}