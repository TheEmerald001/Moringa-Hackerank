{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js"],"names":["_extends","useGridPageSize","defaultPageSize","useGridPage","getPageCount","paginationStateInitializer","state","props","_props$initialState","_props$initialState$p","_ref","_props$page","_props$initialState2","_props$initialState2$","_props$rowCount","_props$rowCount2","pageSize","initialState","pagination","autoPageSize","page","pageCount","rowCount","useGridPagination","apiRef"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,SAASC,eAAT,EAA0BC,eAA1B,QAAiD,mBAAjD;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,eAA1C;AACA,OAAO,MAAMC,0BAA0B,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC1D,MAAIC,mBAAJ,EAAyBC,qBAAzB,EAAgDC,IAAhD,EAAsDC,WAAtD,EAAmEC,oBAAnE,EAAyFC,qBAAzF,EAAgHC,eAAhH,EAAiIC,gBAAjI;;AAEA,MAAIC,QAAJ;;AAEA,MAAIT,KAAK,CAACS,QAAN,IAAkB,IAAtB,EAA4B;AAC1BA,IAAAA,QAAQ,GAAGT,KAAK,CAACS,QAAjB;AACD,GAFD,MAEO,IAAI,CAAC,CAACR,mBAAmB,GAAGD,KAAK,CAACU,YAA7B,KAA8C,IAA9C,GAAqD,KAAK,CAA1D,GAA8D,CAACR,qBAAqB,GAAGD,mBAAmB,CAACU,UAA7C,KAA4D,IAA5D,GAAmE,KAAK,CAAxE,GAA4ET,qBAAqB,CAACO,QAAjK,KAA8K,IAAlL,EAAwL;AAC7LA,IAAAA,QAAQ,GAAGT,KAAK,CAACU,YAAN,CAAmBC,UAAnB,CAA8BF,QAAzC;AACD,GAFM,MAEA;AACLA,IAAAA,QAAQ,GAAGd,eAAe,CAACK,KAAK,CAACY,YAAP,CAA1B;AACD;;AAED,SAAOnB,QAAQ,CAAC,EAAD,EAAKM,KAAL,EAAY;AACzBY,IAAAA,UAAU,EAAE;AACVF,MAAAA,QADU;AAEVI,MAAAA,IAAI,EAAE,CAACV,IAAI,GAAG,CAACC,WAAW,GAAGJ,KAAK,CAACa,IAArB,KAA8B,IAA9B,GAAqCT,WAArC,GAAmD,CAACC,oBAAoB,GAAGL,KAAK,CAACU,YAA9B,KAA+C,IAA/C,GAAsD,KAAK,CAA3D,GAA+D,CAACJ,qBAAqB,GAAGD,oBAAoB,CAACM,UAA9C,KAA6D,IAA7D,GAAoE,KAAK,CAAzE,GAA6EL,qBAAqB,CAACO,IAA7N,KAAsO,IAAtO,GAA6OV,IAA7O,GAAoP,CAFhP;AAGVW,MAAAA,SAAS,EAAEjB,YAAY,CAAC,CAACU,eAAe,GAAGP,KAAK,CAACe,QAAzB,KAAsC,IAAtC,GAA6CR,eAA7C,GAA+D,CAAhE,EAAmEE,QAAnE,CAHb;AAIVM,MAAAA,QAAQ,EAAE,CAACP,gBAAgB,GAAGR,KAAK,CAACe,QAA1B,KAAuC,IAAvC,GAA8CP,gBAA9C,GAAiE;AAJjE;AADa,GAAZ,CAAf;AAQD,CArBM;AAsBP;AACA;AACA;AACA;;AAEA,OAAO,MAAMQ,iBAAiB,GAAG,CAACC,MAAD,EAASjB,KAAT,KAAmB;AAClDN,EAAAA,eAAe,CAACuB,MAAD,EAASjB,KAAT,CAAf;AACAJ,EAAAA,WAAW,CAACqB,MAAD,EAASjB,KAAT,CAAX;AACD,CAHM","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { useGridPageSize, defaultPageSize } from './useGridPageSize';\nimport { useGridPage, getPageCount } from './useGridPage';\nexport const paginationStateInitializer = (state, props) => {\n  var _props$initialState, _props$initialState$p, _ref, _props$page, _props$initialState2, _props$initialState2$, _props$rowCount, _props$rowCount2;\n\n  let pageSize;\n\n  if (props.pageSize != null) {\n    pageSize = props.pageSize;\n  } else if (((_props$initialState = props.initialState) == null ? void 0 : (_props$initialState$p = _props$initialState.pagination) == null ? void 0 : _props$initialState$p.pageSize) != null) {\n    pageSize = props.initialState.pagination.pageSize;\n  } else {\n    pageSize = defaultPageSize(props.autoPageSize);\n  }\n\n  return _extends({}, state, {\n    pagination: {\n      pageSize,\n      page: (_ref = (_props$page = props.page) != null ? _props$page : (_props$initialState2 = props.initialState) == null ? void 0 : (_props$initialState2$ = _props$initialState2.pagination) == null ? void 0 : _props$initialState2$.page) != null ? _ref : 0,\n      pageCount: getPageCount((_props$rowCount = props.rowCount) != null ? _props$rowCount : 0, pageSize),\n      rowCount: (_props$rowCount2 = props.rowCount) != null ? _props$rowCount2 : 0\n    }\n  });\n};\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\n\nexport const useGridPagination = (apiRef, props) => {\n  useGridPageSize(apiRef, props);\n  useGridPage(apiRef, props);\n};"]},"metadata":{},"sourceType":"module"}