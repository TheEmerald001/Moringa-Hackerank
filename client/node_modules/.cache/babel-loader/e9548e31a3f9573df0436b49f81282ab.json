{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityHeaderGroupingMaxDepthSelector, gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/components/containers/GridRoot.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useForkRef","unstable_useEnhancedEffect","useEnhancedEffect","capitalize","unstable_composeClasses","composeClasses","GridRootStyles","gridVisibleColumnDefinitionsSelector","useGridSelector","useGridApiContext","useGridRootProps","getDataGridUtilityClass","gridDensityHeaderGroupingMaxDepthSelector","gridDensityValueSelector","gridPinnedRowsCountSelector","gridRowCountSelector","jsx","_jsx","useUtilityClasses","ownerState","autoHeight","density","classes","slots","root","GridRoot","forwardRef","props","ref","rootProps","children","className","other","apiRef","visibleColumns","totalRowCount","densityValue","headerGroupingMaxDepth","rootContainerRef","useRef","handleRef","pinnedRowsCount","current","rootElementRef","mountedState","setMountedState","useState","unstable_updateGridDimensionsRef","role","length","disableMultipleSelection","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, capitalize } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/material';\nimport { GridRootStyles } from './GridRootStyles';\nimport { gridVisibleColumnDefinitionsSelector } from '../../hooks/features/columns/gridColumnsSelector';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { getDataGridUtilityClass } from '../../constants/gridClasses';\nimport { gridDensityHeaderGroupingMaxDepthSelector, gridDensityValueSelector } from '../../hooks/features/density/densitySelector';\nimport { gridPinnedRowsCountSelector, gridRowCountSelector } from '../../hooks/features/rows/gridRowsSelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    autoHeight,\n    density,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\n\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n\n  const {\n    children,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const apiRef = useGridApiContext();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const densityValue = useGridSelector(apiRef, gridDensityValueSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridDensityHeaderGroupingMaxDepthSelector);\n  const rootContainerRef = React.useRef(null);\n  const handleRef = useForkRef(rootContainerRef, ref);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const ownerState = {\n    density: densityValue,\n    classes: rootProps.classes,\n    autoHeight: rootProps.autoHeight\n  };\n  const classes = useUtilityClasses(ownerState);\n  apiRef.current.rootElementRef = rootContainerRef; // Our implementation of <NoSsr />\n\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  useEnhancedEffect(() => {\n    if (mountedState) {\n      apiRef.current.unstable_updateGridDimensionsRef();\n    }\n  }, [apiRef, mountedState]);\n\n  if (!mountedState) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(className, classes.root),\n    role: \"grid\",\n    \"aria-colcount\": visibleColumns.length,\n    \"aria-rowcount\": headerGroupingMaxDepth + 1 + pinnedRowsCount + totalRowCount,\n    \"aria-multiselectable\": !rootProps.disableMultipleSelection,\n    \"aria-label\": rootProps['aria-label'],\n    \"aria-labelledby\": rootProps['aria-labelledby']\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };"]},"metadata":{},"sourceType":"module"}