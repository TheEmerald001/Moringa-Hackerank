{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnsMenuItem.js"],"names":["React","PropTypes","MenuItem","GridPreferencePanelsValue","useGridApiContext","useGridRootProps","jsx","_jsx","GridColumnsMenuItem","props","onClick","apiRef","rootProps","showColumns","useCallback","event","current","showPreferences","columns","disableColumnSelector","children","getLocaleText","process","env","NODE_ENV","propTypes","column","object","isRequired","func"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,yBAAT,QAA0C,oEAA1C;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,gBAAT,QAAiC,uCAAjC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,MAAMC,mBAAmB,GAAGC,KAAK,IAAI;AACnC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,QAAME,MAAM,GAAGP,iBAAiB,EAAhC;AACA,QAAMQ,SAAS,GAAGP,gBAAgB,EAAlC;AACA,QAAMQ,WAAW,GAAGb,KAAK,CAACc,WAAN,CAAkBC,KAAK,IAAI;AAC7CL,IAAAA,OAAO,CAACK,KAAD,CAAP;AACAJ,IAAAA,MAAM,CAACK,OAAP,CAAeC,eAAf,CAA+Bd,yBAAyB,CAACe,OAAzD;AACD,GAHmB,EAGjB,CAACP,MAAD,EAASD,OAAT,CAHiB,CAApB;;AAKA,MAAIE,SAAS,CAACO,qBAAd,EAAqC;AACnC,WAAO,IAAP;AACD;;AAED,SAAO,aAAaZ,IAAI,CAACL,QAAD,EAAW;AACjCQ,IAAAA,OAAO,EAAEG,WADwB;AAEjCO,IAAAA,QAAQ,EAAET,MAAM,CAACK,OAAP,CAAeK,aAAf,CAA6B,uBAA7B;AAFuB,GAAX,CAAxB;AAID,CAnBD;;AAqBAC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwChB,mBAAmB,CAACiB,SAApB,GAAgC;AACtE;AACA;AACA;AACA;AACAC,EAAAA,MAAM,EAAEzB,SAAS,CAAC0B,MAAV,CAAiBC,UAL6C;AAMtElB,EAAAA,OAAO,EAAET,SAAS,CAAC4B,IAAV,CAAeD;AAN8C,CAAxE,GAOI,KAAK,CAPT;AAQA,SAASpB,mBAAT","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { GridPreferencePanelsValue } from '../../../hooks/features/preferencesPanel/gridPreferencePanelsValue';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { useGridRootProps } from '../../../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst GridColumnsMenuItem = props => {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(MenuItem, {\n    onClick: showColumns,\n    children: apiRef.current.getLocaleText('columnMenuShowColumns')\n  });\n};\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  column: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnsMenuItem };"]},"metadata":{},"sourceType":"module"}