{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/components/GridFooter.js"],"names":["_extends","React","PropTypes","useGridSelector","gridTopLevelRowCountSelector","selectedGridRowsCountSelector","gridVisibleTopLevelRowCountSelector","useGridApiContext","GridRowCount","GridSelectedRowCount","GridFooterContainer","useGridRootProps","jsx","_jsx","jsxs","_jsxs","GridFooter","forwardRef","props","ref","_rootProps$components","apiRef","rootProps","totalTopLevelRowCount","selectedRowCount","visibleTopLevelRowCount","selectedRowCountElement","hideFooterSelectedRowCount","rowCountElement","hideFooterRowCount","pagination","rowCount","visibleRowCount","paginationElement","hideFooterPagination","components","Pagination","componentsProps","children","process","env","NODE_ENV","propTypes","sx","oneOfType","arrayOf","func","object","bool"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from '../hooks/utils/useGridSelector';\nimport { gridTopLevelRowCountSelector } from '../hooks/features/rows/gridRowsSelector';\nimport { selectedGridRowsCountSelector } from '../hooks/features/selection/gridSelectionSelector';\nimport { gridVisibleTopLevelRowCountSelector } from '../hooks/features/filter/gridFilterSelector';\nimport { useGridApiContext } from '../hooks/utils/useGridApiContext';\nimport { GridRowCount } from './GridRowCount';\nimport { GridSelectedRowCount } from './GridSelectedRowCount';\nimport { GridFooterContainer } from './containers/GridFooterContainer';\nimport { useGridRootProps } from '../hooks/utils/useGridRootProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  var _rootProps$components;\n\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridVisibleTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(GridRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  }) : null;\n\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.components.Pagination && /*#__PURE__*/_jsx(rootProps.components.Pagination, _extends({}, (_rootProps$components = rootProps.componentsProps) == null ? void 0 : _rootProps$components.pagination));\n\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };"]},"metadata":{},"sourceType":"module"}