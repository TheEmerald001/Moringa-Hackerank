{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\n\nconst defaultIsOptionDisabled = () => false;\n\nconst defaultOptionStringifier = option => typeof option === 'string' ? option : String(option);\n\nexport default function useListbox(props) {\n  var _props$optionIdGenera, _options$highlightedI;\n\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    multiple = false,\n    optionComparer = defaultOptionComparer,\n    optionStringifier = defaultOptionStringifier,\n    options,\n    stateReducer: externalReducer\n  } = props;\n  const id = useId(idProp);\n\n  function defaultIdGenerator(_, index) {\n    return `${id}-option-${index}`;\n  }\n\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n\n  const propsWithDefaults = _extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    multiple,\n    optionComparer,\n    optionStringifier\n  });\n\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  const [{\n    highlightedValue,\n    selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options,\n      previousOptions: previousOptions.current,\n      props: propsWithDefaults\n    });\n    previousOptions.current = options; // No need to re-run this effect if props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: option\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n\n  const createHandleOptionClick = (option, other) => event => {\n    var _other$onClick;\n\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleOptionPointerOver = (option, other) => event => {\n    var _other$onMouseOver;\n\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the listbox handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n\n    dispatch({\n      type: ActionTypes.keyDown,\n      event,\n      props: propsWithDefaults\n    }); // Handle text navigation\n\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n\n      textCriteria.lastTime = currentTime;\n      dispatch({\n        type: ActionTypes.textNavigation,\n        event,\n        searchString: textCriteria.searchString,\n        props: propsWithDefaults\n      });\n    }\n  };\n\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.blur,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n\n  const getOptionState = option => {\n    let selected;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n\n    if (multiple) {\n      var _ref;\n\n      selected = ((_ref = selectedValue) != null ? _ref : []).some(value => value != null && optionComparer(option, value));\n    } else {\n      selected = optionComparer(option, selectedValue);\n    }\n\n    const disabled = isOptionDisabled(option, index);\n    return {\n      selected,\n      disabled,\n      highlighted: highlightedIndex === index\n    };\n  };\n\n  const getOptionTabIndex = optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n\n    if (!optionState.highlighted) {\n      return -1;\n    }\n\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    const optionState = getOptionState(option);\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  };\n\n  React.useDebugValue({\n    highlightedOption: options[highlightedIndex],\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: (_options$highlightedI = options[highlightedIndex]) != null ? _options$highlightedI : null,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/base/ListboxUnstyled/useListbox.js"],"names":["_extends","React","unstable_useForkRef","useForkRef","unstable_useId","useId","ActionTypes","defaultReducer","useControllableReducer","areArraysEqual","TEXT_NAVIGATION_RESET_TIMEOUT","defaultOptionComparer","optionA","optionB","defaultIsOptionDisabled","defaultOptionStringifier","option","String","useListbox","props","_props$optionIdGenera","_options$highlightedI","disabledItemsFocusable","disableListWrap","focusManagement","id","idProp","isOptionDisabled","listboxRef","externalListboxRef","multiple","optionComparer","optionStringifier","options","stateReducer","externalReducer","defaultIdGenerator","_","index","optionIdGenerator","propsWithDefaults","useRef","handleRef","textCriteriaRef","searchString","lastTime","highlightedValue","selectedValue","dispatch","highlightedIndex","useMemo","findIndex","previousOptions","useEffect","current","type","optionsChange","event","setSelectedValue","useCallback","setValue","value","setHighlightedValue","setHighlight","highlight","createHandleOptionClick","other","_other$onClick","onClick","call","defaultPrevented","preventDefault","optionClick","createHandleOptionPointerOver","_other$onMouseOver","onMouseOver","optionHover","createHandleKeyDown","_other$onKeyDown","onKeyDown","keysToPreventDefault","push","includes","key","keyDown","length","textCriteria","lowerKey","toLowerCase","currentTime","performance","now","textNavigation","createHandleBlur","_other$onBlur","_listboxRef$current","onBlur","contains","document","activeElement","blur","getRootProps","otherHandlers","undefined","role","tabIndex","ref","getOptionState","selected","opt","_ref","some","disabled","highlighted","getOptionTabIndex","optionState","getOptionProps","onPointerOver","useDebugValue","highlightedOption","selectedOption"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useForkRef as useForkRef, unstable_useId as useId } from '@mui/utils';\nimport { ActionTypes } from './useListbox.types';\nimport defaultReducer from './defaultListboxReducer';\nimport useControllableReducer from './useControllableReducer';\nimport areArraysEqual from '../utils/areArraysEqual';\nconst TEXT_NAVIGATION_RESET_TIMEOUT = 500; // milliseconds\n\nconst defaultOptionComparer = (optionA, optionB) => optionA === optionB;\n\nconst defaultIsOptionDisabled = () => false;\n\nconst defaultOptionStringifier = option => typeof option === 'string' ? option : String(option);\n\nexport default function useListbox(props) {\n  var _props$optionIdGenera, _options$highlightedI;\n\n  const {\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    focusManagement = 'activeDescendant',\n    id: idProp,\n    isOptionDisabled = defaultIsOptionDisabled,\n    listboxRef: externalListboxRef,\n    multiple = false,\n    optionComparer = defaultOptionComparer,\n    optionStringifier = defaultOptionStringifier,\n    options,\n    stateReducer: externalReducer\n  } = props;\n  const id = useId(idProp);\n\n  function defaultIdGenerator(_, index) {\n    return `${id}-option-${index}`;\n  }\n\n  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;\n\n  const propsWithDefaults = _extends({}, props, {\n    disabledItemsFocusable,\n    disableListWrap,\n    focusManagement,\n    isOptionDisabled,\n    multiple,\n    optionComparer,\n    optionStringifier\n  });\n\n  const listboxRef = React.useRef(null);\n  const handleRef = useForkRef(externalListboxRef, listboxRef);\n  const textCriteriaRef = React.useRef({\n    searchString: '',\n    lastTime: null\n  });\n  const [{\n    highlightedValue,\n    selectedValue\n  }, dispatch] = useControllableReducer(defaultReducer, externalReducer, propsWithDefaults);\n  const highlightedIndex = React.useMemo(() => {\n    return highlightedValue == null ? -1 : options.findIndex(option => optionComparer(option, highlightedValue));\n  }, [highlightedValue, options, optionComparer]);\n  const previousOptions = React.useRef([]);\n  React.useEffect(() => {\n    if (areArraysEqual(previousOptions.current, options, optionComparer)) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionsChange,\n      event: null,\n      options,\n      previousOptions: previousOptions.current,\n      props: propsWithDefaults\n    });\n    previousOptions.current = options; // No need to re-run this effect if props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options, optionComparer, dispatch]);\n  const setSelectedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setValue,\n      event: null,\n      value: option\n    });\n  }, [dispatch]);\n  const setHighlightedValue = React.useCallback(option => {\n    dispatch({\n      type: ActionTypes.setHighlight,\n      event: null,\n      highlight: option\n    });\n  }, [dispatch]);\n\n  const createHandleOptionClick = (option, other) => event => {\n    var _other$onClick;\n\n    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    event.preventDefault();\n    dispatch({\n      type: ActionTypes.optionClick,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleOptionPointerOver = (option, other) => event => {\n    var _other$onMouseOver;\n\n    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.optionHover,\n      option,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const createHandleKeyDown = other => event => {\n    var _other$onKeyDown;\n\n    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const keysToPreventDefault = ['ArrowUp', 'ArrowDown', 'Home', 'End', 'PageUp', 'PageDown'];\n\n    if (focusManagement === 'activeDescendant') {\n      // When the child element is focused using the activeDescendant attribute,\n      // the listbox handles keyboard events on its behalf.\n      // We have to `preventDefault()` is this case to prevent the browser from\n      // scrolling the view when space is pressed or submitting forms when enter is pressed.\n      keysToPreventDefault.push(' ', 'Enter');\n    }\n\n    if (keysToPreventDefault.includes(event.key)) {\n      event.preventDefault();\n    }\n\n    dispatch({\n      type: ActionTypes.keyDown,\n      event,\n      props: propsWithDefaults\n    }); // Handle text navigation\n\n    if (event.key.length === 1 && event.key !== ' ') {\n      const textCriteria = textCriteriaRef.current;\n      const lowerKey = event.key.toLowerCase();\n      const currentTime = performance.now();\n\n      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {\n        textCriteria.searchString = lowerKey;\n      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {\n        // If there is just one character in the buffer and the key is the same, do not append\n        textCriteria.searchString += lowerKey;\n      }\n\n      textCriteria.lastTime = currentTime;\n      dispatch({\n        type: ActionTypes.textNavigation,\n        event,\n        searchString: textCriteria.searchString,\n        props: propsWithDefaults\n      });\n    }\n  };\n\n  const createHandleBlur = other => event => {\n    var _other$onBlur, _listboxRef$current;\n\n    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);\n\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {\n      // focus is within the listbox\n      return;\n    }\n\n    dispatch({\n      type: ActionTypes.blur,\n      event,\n      props: propsWithDefaults\n    });\n  };\n\n  const getRootProps = (otherHandlers = {}) => {\n    return _extends({}, otherHandlers, {\n      'aria-activedescendant': focusManagement === 'activeDescendant' && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : undefined,\n      id,\n      onBlur: createHandleBlur(otherHandlers),\n      onKeyDown: createHandleKeyDown(otherHandlers),\n      role: 'listbox',\n      tabIndex: focusManagement === 'DOM' ? -1 : 0,\n      ref: handleRef\n    });\n  };\n\n  const getOptionState = option => {\n    let selected;\n    const index = options.findIndex(opt => optionComparer(opt, option));\n\n    if (multiple) {\n      var _ref;\n\n      selected = ((_ref = selectedValue) != null ? _ref : []).some(value => value != null && optionComparer(option, value));\n    } else {\n      selected = optionComparer(option, selectedValue);\n    }\n\n    const disabled = isOptionDisabled(option, index);\n    return {\n      selected,\n      disabled,\n      highlighted: highlightedIndex === index\n    };\n  };\n\n  const getOptionTabIndex = optionState => {\n    if (focusManagement === 'activeDescendant') {\n      return undefined;\n    }\n\n    if (!optionState.highlighted) {\n      return -1;\n    }\n\n    if (optionState.disabled && !disabledItemsFocusable) {\n      return -1;\n    }\n\n    return 0;\n  };\n\n  const getOptionProps = (option, otherHandlers = {}) => {\n    const optionState = getOptionState(option);\n    const index = options.findIndex(opt => optionComparer(opt, option));\n    return _extends({}, otherHandlers, {\n      'aria-disabled': optionState.disabled || undefined,\n      'aria-selected': optionState.selected,\n      id: optionIdGenerator(option, index),\n      onClick: createHandleOptionClick(option, otherHandlers),\n      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),\n      role: 'option',\n      tabIndex: getOptionTabIndex(optionState)\n    });\n  };\n\n  React.useDebugValue({\n    highlightedOption: options[highlightedIndex],\n    selectedOption: selectedValue\n  });\n  return {\n    getRootProps,\n    getOptionProps,\n    getOptionState,\n    highlightedOption: (_options$highlightedI = options[highlightedIndex]) != null ? _options$highlightedI : null,\n    selectedOption: selectedValue,\n    setSelectedValue,\n    setHighlightedValue\n  };\n}"]},"metadata":{},"sourceType":"module"}