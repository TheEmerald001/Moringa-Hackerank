{"ast":null,"code":"export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object';\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n} // Pseudo random number. See https://stackoverflow.com/a/47593316\n\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n\n  return JSON.parse(JSON.stringify(obj));\n}","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/utils/utils.js"],"names":["isNumber","value","isFunction","isObject","localStorageAvailable","key","window","localStorage","setItem","removeItem","err","escapeRegExp","replace","clamp","min","max","Math","isDeepEqual","a","b","constructor","Array","isArray","length","i","Map","size","entriesA","from","entries","has","entryA","get","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","Object","prototype","toString","keys","hasOwnProperty","call","mulberry32","t","imul","randomNumberBetween","seed","random","deepClone","obj","structuredClone","JSON","parse","stringify"],"mappings":"AAAA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,SAAO,OAAOA,KAAP,KAAiB,QAAxB;AACD;AACD,OAAO,SAASC,UAAT,CAAoBD,KAApB,EAA2B;AAChC,SAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD;AACD,OAAO,SAASE,QAAT,CAAkBF,KAAlB,EAAyB;AAC9B,SAAO,OAAOA,KAAP,KAAiB,QAAxB;AACD;AACD,OAAO,SAASG,qBAAT,GAAiC;AACtC,MAAI;AACF;AACA;AACA;AACA,UAAMC,GAAG,GAAG,8CAAZ;AACAC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BH,GAA5B,EAAiCA,GAAjC;AACAC,IAAAA,MAAM,CAACC,YAAP,CAAoBE,UAApB,CAA+BJ,GAA/B;AACA,WAAO,IAAP;AACD,GARD,CAQE,OAAOK,GAAP,EAAY;AACZ,WAAO,KAAP;AACD;AACF;AACD,OAAO,SAASC,YAAT,CAAsBV,KAAtB,EAA6B;AAClC,SAAOA,KAAK,CAACW,OAAN,CAAc,0BAAd,EAA0C,MAA1C,CAAP;AACD;AACD;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACZ,KAAD,EAAQa,GAAR,EAAaC,GAAb,KAAqBC,IAAI,CAACD,GAAL,CAASD,GAAT,EAAcE,IAAI,CAACF,GAAL,CAASC,GAAT,EAAcd,KAAd,CAAd,CAAnC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASgB,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AAChC,MAAID,CAAC,KAAKC,CAAV,EAAa;AACX,WAAO,IAAP;AACD;;AAED,MAAID,CAAC,IAAIC,CAAL,IAAU,OAAOD,CAAP,KAAa,QAAvB,IAAmC,OAAOC,CAAP,KAAa,QAApD,EAA8D;AAC5D,QAAID,CAAC,CAACE,WAAF,KAAkBD,CAAC,CAACC,WAAxB,EAAqC;AACnC,aAAO,KAAP;AACD;;AAED,QAAIC,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,EAAsB;AACpB,YAAMK,MAAM,GAAGL,CAAC,CAACK,MAAjB;;AAEA,UAAIA,MAAM,KAAKJ,CAAC,CAACI,MAAjB,EAAyB;AACvB,eAAO,KAAP;AACD;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAClC,YAAI,CAACP,WAAW,CAACC,CAAC,CAACM,CAAD,CAAF,EAAOL,CAAC,CAACK,CAAD,CAAR,CAAhB,EAA8B;AAC5B,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;AAED,QAAIN,CAAC,YAAYO,GAAb,IAAoBN,CAAC,YAAYM,GAArC,EAA0C;AACxC,UAAIP,CAAC,CAACQ,IAAF,KAAWP,CAAC,CAACO,IAAjB,EAAuB;AACrB,eAAO,KAAP;AACD;;AAED,YAAMC,QAAQ,GAAGN,KAAK,CAACO,IAAN,CAAWV,CAAC,CAACW,OAAF,EAAX,CAAjB;;AAEA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,QAAQ,CAACJ,MAA7B,EAAqCC,CAAC,IAAI,CAA1C,EAA6C;AAC3C,YAAI,CAACL,CAAC,CAACW,GAAF,CAAMH,QAAQ,CAACH,CAAD,CAAR,CAAY,CAAZ,CAAN,CAAL,EAA4B;AAC1B,iBAAO,KAAP;AACD;AACF;;AAED,WAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGG,QAAQ,CAACJ,MAA7B,EAAqCC,CAAC,IAAI,CAA1C,EAA6C;AAC3C,cAAMO,MAAM,GAAGJ,QAAQ,CAACH,CAAD,CAAvB;;AAEA,YAAI,CAACP,WAAW,CAACc,MAAM,CAAC,CAAD,CAAP,EAAYZ,CAAC,CAACa,GAAF,CAAMD,MAAM,CAAC,CAAD,CAAZ,CAAZ,CAAhB,EAA+C;AAC7C,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;AAED,QAAIb,CAAC,YAAYe,GAAb,IAAoBd,CAAC,YAAYc,GAArC,EAA0C;AACxC,UAAIf,CAAC,CAACQ,IAAF,KAAWP,CAAC,CAACO,IAAjB,EAAuB;AACrB,eAAO,KAAP;AACD;;AAED,YAAMG,OAAO,GAAGR,KAAK,CAACO,IAAN,CAAWV,CAAC,CAACW,OAAF,EAAX,CAAhB;;AAEA,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,OAAO,CAACN,MAA5B,EAAoCC,CAAC,IAAI,CAAzC,EAA4C;AAC1C,YAAI,CAACL,CAAC,CAACW,GAAF,CAAMD,OAAO,CAACL,CAAD,CAAP,CAAW,CAAX,CAAN,CAAL,EAA2B;AACzB,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;AAED,QAAIU,WAAW,CAACC,MAAZ,CAAmBjB,CAAnB,KAAyBgB,WAAW,CAACC,MAAZ,CAAmBhB,CAAnB,CAA7B,EAAoD;AAClD,YAAMI,MAAM,GAAGL,CAAC,CAACK,MAAjB;;AAEA,UAAIA,MAAM,KAAKJ,CAAC,CAACI,MAAjB,EAAyB;AACvB,eAAO,KAAP;AACD;;AAED,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAClC,YAAIN,CAAC,CAACM,CAAD,CAAD,KAASL,CAAC,CAACK,CAAD,CAAd,EAAmB;AACjB,iBAAO,KAAP;AACD;AACF;;AAED,aAAO,IAAP;AACD;;AAED,QAAIN,CAAC,CAACE,WAAF,KAAkBgB,MAAtB,EAA8B;AAC5B,aAAOlB,CAAC,CAACmB,MAAF,KAAalB,CAAC,CAACkB,MAAf,IAAyBnB,CAAC,CAACoB,KAAF,KAAYnB,CAAC,CAACmB,KAA9C;AACD;;AAED,QAAIpB,CAAC,CAACqB,OAAF,KAAcC,MAAM,CAACC,SAAP,CAAiBF,OAAnC,EAA4C;AAC1C,aAAOrB,CAAC,CAACqB,OAAF,OAAgBpB,CAAC,CAACoB,OAAF,EAAvB;AACD;;AAED,QAAIrB,CAAC,CAACwB,QAAF,KAAeF,MAAM,CAACC,SAAP,CAAiBC,QAApC,EAA8C;AAC5C,aAAOxB,CAAC,CAACwB,QAAF,OAAiBvB,CAAC,CAACuB,QAAF,EAAxB;AACD;;AAED,UAAMC,IAAI,GAAGH,MAAM,CAACG,IAAP,CAAYzB,CAAZ,CAAb;AACA,UAAMK,MAAM,GAAGoB,IAAI,CAACpB,MAApB;;AAEA,QAAIA,MAAM,KAAKiB,MAAM,CAACG,IAAP,CAAYxB,CAAZ,EAAeI,MAA9B,EAAsC;AACpC,aAAO,KAAP;AACD;;AAED,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAClC,UAAI,CAACgB,MAAM,CAACC,SAAP,CAAiBG,cAAjB,CAAgCC,IAAhC,CAAqC1B,CAArC,EAAwCwB,IAAI,CAACnB,CAAD,CAA5C,CAAL,EAAuD;AACrD,eAAO,KAAP;AACD;AACF;;AAED,SAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,IAAI,CAAjC,EAAoC;AAClC,YAAMnB,GAAG,GAAGsC,IAAI,CAACnB,CAAD,CAAhB;;AAEA,UAAI,CAACP,WAAW,CAACC,CAAC,CAACb,GAAD,CAAF,EAASc,CAAC,CAACd,GAAD,CAAV,CAAhB,EAAkC;AAChC,eAAO,KAAP;AACD;AACF;;AAED,WAAO,IAAP;AACD,GApH+B,CAoH9B;AACF;;;AAGA,SAAOa,CAAC,KAAKA,CAAN,IAAWC,CAAC,KAAKA,CAAxB;AACD,C,CAAC;;AAEF,SAAS2B,UAAT,CAAoB5B,CAApB,EAAuB;AACrB,SAAO,MAAM;AACX;AACA,QAAI6B,CAAC,GAAG7B,CAAC,IAAI,UAAb;AACA6B,IAAAA,CAAC,GAAG/B,IAAI,CAACgC,IAAL,CAAUD,CAAC,GAAGA,CAAC,KAAK,EAApB,EAAwBA,CAAC,GAAG,CAA5B,CAAJ;AACAA,IAAAA,CAAC,IAAIA,CAAC,GAAG/B,IAAI,CAACgC,IAAL,CAAUD,CAAC,GAAGA,CAAC,KAAK,CAApB,EAAuBA,CAAC,GAAG,EAA3B,CAAT;AACA,WAAO,CAAC,CAACA,CAAC,GAAGA,CAAC,KAAK,EAAX,MAAmB,CAApB,IAAyB,UAAhC;AACA;AACD,GAPD;AAQD;;AAED,OAAO,SAASE,mBAAT,CAA6BC,IAA7B,EAAmCpC,GAAnC,EAAwCC,GAAxC,EAA6C;AAClD,QAAMoC,MAAM,GAAGL,UAAU,CAACI,IAAD,CAAzB;AACA,SAAO,MAAMpC,GAAG,GAAG,CAACC,GAAG,GAAGD,GAAP,IAAcqC,MAAM,EAAvC;AACD;AACD,OAAO,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AAC7B,MAAI,OAAOC,eAAP,KAA2B,UAA/B,EAA2C;AACzC,WAAOA,eAAe,CAACD,GAAD,CAAtB;AACD;;AAED,SAAOE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,GAAf,CAAX,CAAP;AACD","sourcesContent":["export function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object';\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\n\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n/**\n * Based on `fast-deep-equal`\n *\n *  MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (Array.isArray(a)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entriesA = Array.from(a.entries());\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      const entries = Array.from(a.entries());\n\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n\n      if (length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n\n    const keys = Object.keys(a);\n    const length = keys.length;\n\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n\n    return true;\n  } // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n\n\n  return a !== a && b !== b;\n} // Pseudo random number. See https://stackoverflow.com/a/47593316\n\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\nexport function randomNumberBetween(seed, min, max) {\n  const random = mulberry32(seed);\n  return () => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n\n  return JSON.parse(JSON.stringify(obj));\n}"]},"metadata":{},"sourceType":"module"}