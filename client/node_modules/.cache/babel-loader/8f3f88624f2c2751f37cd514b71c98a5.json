{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nexport default function SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value\n  } = props;\n  const classes = useValueLabelClasses(props);\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [children.props.children, /*#__PURE__*/_jsx(\"span\", {\n      className: clsx(classes.offset, className),\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: classes.circle,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: classes.label,\n          children: value\n        })\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/base/SliderUnstyled/SliderValueLabelUnstyled.js"],"names":["React","PropTypes","clsx","sliderUnstyledClasses","jsx","_jsx","jsxs","_jsxs","useValueLabelClasses","props","open","utilityClasses","offset","valueLabelOpen","circle","valueLabelCircle","label","valueLabelLabel","SliderValueLabelUnstyled","children","className","value","classes","cloneElement","Fragment","process","env","NODE_ENV","propTypes","element","isRequired","string","theme","any","node"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;;AAEA,MAAMC,oBAAoB,GAAGC,KAAK,IAAI;AACpC,QAAM;AACJC,IAAAA;AADI,MAEFD,KAFJ;AAGA,QAAME,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAEV,IAAI,CAACQ,IAAI,IAAIP,qBAAqB,CAACU,cAA/B,CADS;AAErBC,IAAAA,MAAM,EAAEX,qBAAqB,CAACY,gBAFT;AAGrBC,IAAAA,KAAK,EAAEb,qBAAqB,CAACc;AAHR,GAAvB;AAKA,SAAON,cAAP;AACD,CAVD;AAWA;AACA;AACA;;;AAGA,eAAe,SAASO,wBAAT,CAAkCT,KAAlC,EAAyC;AACtD,QAAM;AACJU,IAAAA,QADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA;AAHI,MAIFZ,KAJJ;AAKA,QAAMa,OAAO,GAAGd,oBAAoB,CAACC,KAAD,CAApC;AACA,SAAO,aAAaT,KAAK,CAACuB,YAAN,CAAmBJ,QAAnB,EAA6B;AAC/CC,IAAAA,SAAS,EAAElB,IAAI,CAACiB,QAAQ,CAACV,KAAT,CAAeW,SAAhB;AADgC,GAA7B,EAEjB,aAAab,KAAK,CAACP,KAAK,CAACwB,QAAP,EAAiB;AACpCL,IAAAA,QAAQ,EAAE,CAACA,QAAQ,CAACV,KAAT,CAAeU,QAAhB,EAA0B,aAAad,IAAI,CAAC,MAAD,EAAS;AAC5De,MAAAA,SAAS,EAAElB,IAAI,CAACoB,OAAO,CAACV,MAAT,EAAiBQ,SAAjB,CAD6C;AAE5D,qBAAe,IAF6C;AAG5DD,MAAAA,QAAQ,EAAE,aAAad,IAAI,CAAC,MAAD,EAAS;AAClCe,QAAAA,SAAS,EAAEE,OAAO,CAACR,MADe;AAElCK,QAAAA,QAAQ,EAAE,aAAad,IAAI,CAAC,MAAD,EAAS;AAClCe,UAAAA,SAAS,EAAEE,OAAO,CAACN,KADe;AAElCG,UAAAA,QAAQ,EAAEE;AAFwB,SAAT;AAFO,OAAT;AAHiC,KAAT,CAA3C;AAD0B,GAAjB,CAFD,CAApB;AAeD;AACDI,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCT,wBAAwB,CAACU,SAAzB,GAAqC;AAC3ET,EAAAA,QAAQ,EAAElB,SAAS,CAAC4B,OAAV,CAAkBC,UAD+C;AAE3EV,EAAAA,SAAS,EAAEnB,SAAS,CAAC8B,MAFsD;AAG3EC,EAAAA,KAAK,EAAE/B,SAAS,CAACgC,GAH0D;AAI3EZ,EAAAA,KAAK,EAAEpB,SAAS,CAACiC;AAJ0D,CAA7E,GAKI,KAAK,CALT","sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport sliderUnstyledClasses from './sliderUnstyledClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useValueLabelClasses = props => {\n  const {\n    open\n  } = props;\n  const utilityClasses = {\n    offset: clsx(open && sliderUnstyledClasses.valueLabelOpen),\n    circle: sliderUnstyledClasses.valueLabelCircle,\n    label: sliderUnstyledClasses.valueLabelLabel\n  };\n  return utilityClasses;\n};\n/**\n * @ignore - internal component.\n */\n\n\nexport default function SliderValueLabelUnstyled(props) {\n  const {\n    children,\n    className,\n    value\n  } = props;\n  const classes = useValueLabelClasses(props);\n  return /*#__PURE__*/React.cloneElement(children, {\n    className: clsx(children.props.className)\n  }, /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [children.props.children, /*#__PURE__*/_jsx(\"span\", {\n      className: clsx(classes.offset, className),\n      \"aria-hidden\": true,\n      children: /*#__PURE__*/_jsx(\"span\", {\n        className: classes.circle,\n        children: /*#__PURE__*/_jsx(\"span\", {\n          className: classes.label,\n          children: value\n        })\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? SliderValueLabelUnstyled.propTypes = {\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  theme: PropTypes.any,\n  value: PropTypes.node\n} : void 0;"]},"metadata":{},"sourceType":"module"}