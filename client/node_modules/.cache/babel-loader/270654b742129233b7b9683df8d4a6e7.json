{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport questions from \"../Helpers/data\";\nconst quizSlice = createSlice({\n  name: \"quiz\",\n  initialState: {\n    questions,\n    currentQuestionIndex: 0,\n    showResults: false\n  },\n  reducers: {\n    getQuestions: (state, action) => {\n      return state;\n    },\n    nextQuestion: state => {\n      const showResults = state.currentQuestionIndex === state.questions.lenght - 1;\n      const currentQuestionIndex = showResults ? currentQuestionIndex : state.currentQuestionIndex + 1;\n      return { ...state,\n        currentQuestionIndex,\n        showResults\n      };\n    }\n  }\n});\nexport const {\n  getQuestions,\n  nextQuestion\n} = quizSlice.actions;\nexport default quizSlice.reducer;","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/redux/quizSlice.js"],"names":["createSlice","questions","quizSlice","name","initialState","currentQuestionIndex","showResults","reducers","getQuestions","state","action","nextQuestion","lenght","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,MAAMC,SAAS,GAAGF,WAAW,CAAC;AAC5BG,EAAAA,IAAI,EAAE,MADsB;AAE5BC,EAAAA,YAAY,EAAE;AACZH,IAAAA,SADY;AAEZI,IAAAA,oBAAoB,EAAE,CAFV;AAGZC,IAAAA,WAAW,EAAE;AAHD,GAFc;AAO5BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,YAAY,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,aAAOD,KAAP;AACD,KAHO;AAIRE,IAAAA,YAAY,EAAGF,KAAD,IAAW;AACvB,YAAMH,WAAW,GACfG,KAAK,CAACJ,oBAAN,KAA+BI,KAAK,CAACR,SAAN,CAAgBW,MAAhB,GAAyB,CAD1D;AAEA,YAAMP,oBAAoB,GAAGC,WAAW,GACpCD,oBADoC,GAEpCI,KAAK,CAACJ,oBAAN,GAA6B,CAFjC;AAGA,aAAO,EACL,GAAGI,KADE;AAELJ,QAAAA,oBAFK;AAGLC,QAAAA;AAHK,OAAP;AAKD;AAfO;AAPkB,CAAD,CAA7B;AA0BA,OAAO,MAAM;AAAEE,EAAAA,YAAF;AAAgBG,EAAAA;AAAhB,IAAiCT,SAAS,CAACW,OAAjD;AACP,eAAeX,SAAS,CAACY,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport questions from \"../Helpers/data\";\nconst quizSlice = createSlice({\n  name: \"quiz\",\n  initialState: {\n    questions,\n    currentQuestionIndex: 0,\n    showResults: false,\n  },\n  reducers: {\n    getQuestions: (state, action) => {\n      return state;\n    },\n    nextQuestion: (state) => {\n      const showResults =\n        state.currentQuestionIndex === state.questions.lenght - 1;\n      const currentQuestionIndex = showResults\n        ? currentQuestionIndex\n        : state.currentQuestionIndex + 1;\n      return {\n        ...state,\n        currentQuestionIndex,\n        showResults,\n      };\n    },\n  },\n});\n\nexport const { getQuestions, nextQuestion } = quizSlice.actions;\nexport default quizSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}