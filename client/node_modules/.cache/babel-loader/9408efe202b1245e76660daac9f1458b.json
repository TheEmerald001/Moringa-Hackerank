{"ast":null,"code":"var _jsxFileName = \"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Question from \"../components/Question\";\nimport StudentSideBar from \"../components/StudentSideBar\";\nimport quiz from \"../Helpers/quiz\";\nimport { nextQuestion, showResults } from \"../redux/quizSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizPage() {\n  _s();\n\n  // const [questions, setQuestions] = useState(quiz);\n  const [currentQuestionId, setCurrentQuestionId] = useState(1);\n  const [score, setScore] = useState(0);\n  const currentQuestion = questions.find(q => q.id === currentQuestionId);\n  const {\n    questions\n  } = useSelector(state => state.quiz);\n  const dispatch = useDispatch();\n\n  const handleQuestionAnswered = correct => {\n    if (currentQuestionId < questions.length) {\n      setCurrentQuestionId(currentQuestionId => currentQuestionId + 1);\n    } else {\n      setCurrentQuestionId(null);\n    }\n\n    if (correct) {\n      setScore(score => score + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StudentSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizContainer, {\n      children: !showResults && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Question, {\n          question: currentQuestion,\n          onAnswered: handleQuestionAnswered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n          onClick: () => dispatch(nextQuestion()),\n          children: \"Next Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizPage, \"sN2s8fYNTotp+VYwrx2Ov5/s+S8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = QuizPage;\nexport default QuizPage;\nconst Container = styled.main`\n  display: flex;\n  color: #101f3c;\n`;\n_c2 = Container;\nconst QuizContainer = styled.section`\n  flex: 8;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c3 = QuizContainer;\nconst NextButton = styled.article`\n  margin: 0 auto;\n  color: #fff;\n  background: #0b0e21;\n  width: 300px;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 14px 75px;\n  text-transform: uppercase;\n  cursor: pointer;\n  text-align: center;\n`;\n_c4 = NextButton;\nconst Results = styled.article``;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuizPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"QuizContainer\");\n$RefreshReg$(_c4, \"NextButton\");","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js"],"names":["React","useState","useDispatch","useSelector","styled","Question","StudentSideBar","quiz","nextQuestion","showResults","QuizPage","currentQuestionId","setCurrentQuestionId","score","setScore","currentQuestion","questions","find","q","id","state","dispatch","handleQuestionAnswered","correct","length","Container","main","QuizContainer","section","NextButton","article","Results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,oBAA1C;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMc,eAAe,GAAGC,SAAS,CAACC,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASR,iBAA/B,CAAxB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAgBb,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACb,IAAlB,CAAjC;AACA,QAAMc,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,QAAMoB,sBAAsB,GAAIC,OAAD,IAAa;AAC1C,QAAIZ,iBAAiB,GAAGK,SAAS,CAACQ,MAAlC,EAA0C;AACxCZ,MAAAA,oBAAoB,CAAED,iBAAD,IAAuBA,iBAAiB,GAAG,CAA5C,CAApB;AACD,KAFD,MAEO;AACLC,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD;;AACD,QAAIW,OAAJ,EAAa;AACXT,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD;AACF,GATD;;AAWA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,gBACG,CAACJ,WAAD,iBACC;AAAA,gCACE,QAAC,QAAD;AACE,UAAA,QAAQ,EAAEM,eADZ;AAEE,UAAA,UAAU,EAAEO;AAFd;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMD,QAAQ,CAACb,YAAY,EAAb,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GArCQE,Q;UAKeP,W,EACLD,W;;;KANVQ,Q;AAuCT,eAAeA,QAAf;AAEA,MAAMe,SAAS,GAAGrB,MAAM,CAACsB,IAAK;AAC9B;AACA;AACA,CAHA;MAAMD,S;AAKN,MAAME,aAAa,GAAGvB,MAAM,CAACwB,OAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,a;AAQN,MAAME,UAAU,GAAGzB,MAAM,CAAC0B,OAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U;AAaN,MAAME,OAAO,GAAG3B,MAAM,CAAC0B,OAAQ,EAA/B","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Question from \"../components/Question\";\nimport StudentSideBar from \"../components/StudentSideBar\";\nimport quiz from \"../Helpers/quiz\";\nimport { nextQuestion, showResults } from \"../redux/quizSlice\";\n\nfunction QuizPage() {\n  // const [questions, setQuestions] = useState(quiz);\n  const [currentQuestionId, setCurrentQuestionId] = useState(1);\n  const [score, setScore] = useState(0);\n  const currentQuestion = questions.find((q) => q.id === currentQuestionId);\n  const { questions } = useSelector((state) => state.quiz);\n  const dispatch = useDispatch();\n\n  const handleQuestionAnswered = (correct) => {\n    if (currentQuestionId < questions.length) {\n      setCurrentQuestionId((currentQuestionId) => currentQuestionId + 1);\n    } else {\n      setCurrentQuestionId(null);\n    }\n    if (correct) {\n      setScore((score) => score + 1);\n    }\n  };\n\n  return (\n    <Container>\n      <StudentSideBar />\n      <QuizContainer>\n        {!showResults && (\n          <>\n            <Question\n              question={currentQuestion}\n              onAnswered={handleQuestionAnswered}\n            />\n            <NextButton onClick={() => dispatch(nextQuestion())}>\n              Next Question\n            </NextButton>\n          </>\n        )}\n      </QuizContainer>\n    </Container>\n  );\n}\n\nexport default QuizPage;\n\nconst Container = styled.main`\n  display: flex;\n  color: #101f3c;\n`;\n\nconst QuizContainer = styled.section`\n  flex: 8;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst NextButton = styled.article`\n  margin: 0 auto;\n  color: #fff;\n  background: #0b0e21;\n  width: 300px;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 14px 75px;\n  text-transform: uppercase;\n  cursor: pointer;\n  text-align: center;\n`;\n\nconst Results = styled.article``;\n"]},"metadata":{},"sourceType":"module"}