{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea, _componentsProps$popu, _componentsProps$popp, _componentsProps$pape;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, componentsProps.popupIndicator, {\n              className: clsx(classes.popupIndicator, (_componentsProps$popu = componentsProps.popupIndicator) == null ? void 0 : _componentsProps$popu.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, componentsProps.popper, {\n      className: clsx(classes.popper, (_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, componentsProps.paper, {\n        className: clsx(classes.paper, (_componentsProps$pape = componentsProps.paper) == null ? void 0 : _componentsProps$pape.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;","map":{"version":3,"sources":["/home/shaki/phase-5-project/Moringa-Hackerank1/Moringa-Hackerank/client/node_modules/@mui/material/esm/Autocomplete/Autocomplete.js"],"names":["_objectWithoutPropertiesLoose","_extends","_ClearIcon","_ArrowDropDownIcon","_excluded","React","PropTypes","clsx","chainPropTypes","integerPropType","unstable_composeClasses","composeClasses","useAutocomplete","createFilterOptions","alpha","Popper","ListSubheader","Paper","IconButton","Chip","inputClasses","inputBaseClasses","outlinedInputClasses","filledInputClasses","ClearIcon","ArrowDropDownIcon","useThemeProps","styled","autocompleteClasses","getAutocompleteUtilityClass","capitalize","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","classes","disablePortal","focused","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","popupOpen","size","slots","root","inputRoot","input","tag","endAdornment","clearIndicator","popupIndicator","popper","paper","listbox","loading","noOptions","option","groupLabel","groupUl","AutocompleteRoot","name","slot","overridesResolver","props","styles","visibility","width","margin","maxWidth","flexWrap","paddingRight","minWidth","paddingBottom","padding","sizeSmall","right","paddingTop","paddingLeft","hiddenLabel","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","position","top","AutocompleteClearIndicator","marginRight","AutocompletePopupIndicator","popupIndicatorOpen","transform","AutocompletePopper","popperDisablePortal","theme","zIndex","vars","modal","AutocompletePaper","typography","body1","overflow","AutocompleteLoading","color","palette","text","secondary","AutocompleteNoOptions","AutocompleteListbox","listStyle","maxHeight","minHeight","display","justifyContent","alignItems","cursor","boxSizing","outline","WebkitTapHighlightColor","breakpoints","up","backgroundColor","action","hover","disabledOpacity","pointerEvents","focusVisible","focus","primary","mainChannel","selectedOpacity","main","hoverOpacity","selected","focusOpacity","AutocompleteGroupLabel","background","AutocompleteGroupUl","Autocomplete","forwardRef","inProps","ref","_componentsProps$clea","_componentsProps$popu","_componentsProps$popp","_componentsProps$pape","autoComplete","autoHighlight","autoSelect","blurOnSelect","ChipProps","className","clearIcon","fontSize","clearOnBlur","freeSolo","clearOnEscape","clearText","closeText","componentsProps","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabled","disabledItemsFocusable","disableListWrap","filterSelectedOptions","forcePopupIcon","getLimitTagsText","more","getOptionLabel","_option$label","label","groupBy","handleHomeEndKeys","includeInputInList","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openOnFocus","openText","PaperComponent","PopperComponent","popupIcon","readOnly","renderGroup","renderGroupProp","renderInput","renderOption","renderOptionProp","renderTags","selectOnFocus","other","getRootProps","getInputProps","getInputLabelProps","getPopupIndicatorProps","getClearProps","getTagProps","getListboxProps","getOptionProps","value","dirty","id","focusedTag","anchorEl","setAnchorEl","inputValue","groupedOptions","componentName","startAdornment","length","getCustomizedTagProps","params","map","index","Array","isArray","splice","push","children","defaultRenderGroup","component","group","key","defaultRenderOption","props2","renderListOption","optionProps","Fragment","undefined","InputLabelProps","InputProps","title","inputProps","as","style","clientWidth","role","open","onMouseDown","event","preventDefault","options","option2","index2","process","env","NODE_ENV","propTypes","bool","oneOfType","oneOf","object","string","node","shape","any","Error","join","filterOptions","func","getOptionDisabled","isOptionEqualToValue","elementType","onChange","onClose","onHighlightChange","onInputChange","onOpen","array","isRequired","sx","arrayOf"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"readOnly\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport inputClasses from '../Input/inputClasses';\nimport inputBaseClasses from '../InputBase/inputBaseClasses';\nimport outlinedInputClasses from '../OutlinedInput/outlinedInputClasses';\nimport filledInputClasses from '../FilledInput/filledInputClasses';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  [`& .${inputClasses.root}`]: {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  [`& .${inputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    [`& .${inputClasses.input}`]: {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  [`& .${outlinedInputClasses.root}`]: {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${outlinedInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    // Don't specify paddingRight, as it overrides the default value set when there is only\n    // one of the popup or clear icon as the specificity is equal so the latter one wins\n    paddingTop: 6,\n    paddingBottom: 6,\n    paddingLeft: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  [`& .${filledInputClasses.root}`]: {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${filledInputClasses.input}`]: {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  [`& .${filledInputClasses.root}.${inputBaseClasses.sizeSmall}`]: {\n    paddingBottom: 1,\n    [`& .${filledInputClasses.input}`]: {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${inputBaseClasses.hiddenLabel}`]: {\n    paddingTop: 8\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: (theme.vars || theme).zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: (theme.vars || theme).palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea, _componentsProps$popu, _componentsProps$popp, _componentsProps$pape;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    readOnly = false,\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty && !readOnly;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false; // If you modify this, make sure to keep the `AutocompleteOwnerState` type in sync.\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: classes.tag,\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps, ownerState);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: _extends({\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment\n        }, (hasClearIcon || hasPopupIcon) && {\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              ownerState: ownerState\n            }, componentsProps.popupIndicator, {\n              className: clsx(classes.popupIndicator, (_componentsProps$popu = componentsProps.popupIndicator) == null ? void 0 : _componentsProps$popu.className),\n              children: popupIcon\n            })) : null]\n          })\n        }),\n        inputProps: _extends({\n          className: classes.input,\n          disabled,\n          readOnly\n        }, getInputProps())\n      })\n    })), anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, _extends({\n      as: PopperComponent,\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: popupOpen\n    }, componentsProps.popper, {\n      className: clsx(classes.popper, (_componentsProps$popp = componentsProps.popper) == null ? void 0 : _componentsProps$popp.className),\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, _extends({\n        ownerState: ownerState,\n        as: PaperComponent\n      }, componentsProps.paper, {\n        className: clsx(classes.paper, (_componentsProps$pape = componentsProps.paper) == null ? void 0 : _componentsProps$pape.className),\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      }))\n    })) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/material-ui/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume their search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    clearIndicator: PropTypes.object,\n    paper: PropTypes.object,\n    popper: PropTypes.object,\n    popupIndicator: PropTypes.object\n  }),\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A function that determines the filtered options to be rendered on search.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * If used in free solo mode, it must accept both the type of the options and a string.\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * If `true`, the component becomes readonly. It is also supported for multiple tags where the tag cannot be deleted.\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @param {object} ownerState The state of the Autocomplete component.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"]},"metadata":{},"sourceType":"module"}