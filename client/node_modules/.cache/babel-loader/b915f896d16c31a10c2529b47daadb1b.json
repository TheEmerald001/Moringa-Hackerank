{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js"],"names":["_extends","React","PropTypes","HTMLElementType","useGridApiContext","GridMenu","jsx","_jsx","GridColumnHeaderMenu","columnMenuId","columnMenuButtonId","ContentComponent","contentComponentProps","field","open","target","onExited","apiRef","currentColumn","current","getColumn","hideMenu","useCallback","event","stopPropagation","hideColumnMenu","placement","align","onClickAway","children","id","labelledby","process","env","NODE_ENV","propTypes","string","elementType","isRequired","any","func","bool"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,iBAAT,QAAkC,wCAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;;AAEA,SAASC,oBAAT,CAA8B;AAC5BC,EAAAA,YAD4B;AAE5BC,EAAAA,kBAF4B;AAG5BC,EAAAA,gBAH4B;AAI5BC,EAAAA,qBAJ4B;AAK5BC,EAAAA,KAL4B;AAM5BC,EAAAA,IAN4B;AAO5BC,EAAAA,MAP4B;AAQ5BC,EAAAA;AAR4B,CAA9B,EASG;AACD,QAAMC,MAAM,GAAGb,iBAAiB,EAAhC;AACA,QAAMc,aAAa,GAAGD,MAAM,CAACE,OAAP,CAAeC,SAAf,CAAyBP,KAAzB,CAAtB;AACA,QAAMQ,QAAQ,GAAGpB,KAAK,CAACqB,WAAN,CAAkBC,KAAK,IAAI;AAC1C;AACAA,IAAAA,KAAK,CAACC,eAAN;AACAP,IAAAA,MAAM,CAACE,OAAP,CAAeM,cAAf;AACD,GAJgB,EAId,CAACR,MAAD,CAJc,CAAjB;;AAMA,MAAI,CAACF,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,SAAO,aAAaR,IAAI,CAACF,QAAD,EAAW;AACjCqB,IAAAA,SAAS,EAAG,UAASR,aAAa,CAACS,KAAd,KAAwB,OAAxB,GAAkC,OAAlC,GAA4C,KAAM,EADtC;AAEjCb,IAAAA,IAAI,EAAEA,IAF2B;AAGjCC,IAAAA,MAAM,EAAEA,MAHyB;AAIjCa,IAAAA,WAAW,EAAEP,QAJoB;AAKjCL,IAAAA,QAAQ,EAAEA,QALuB;AAMjCa,IAAAA,QAAQ,EAAE,aAAatB,IAAI,CAACI,gBAAD,EAAmBX,QAAQ,CAAC;AACrDkB,MAAAA,aAAa,EAAEA,aADsC;AAErDG,MAAAA,QAAQ,EAAEA,QAF2C;AAGrDP,MAAAA,IAAI,EAAEA,IAH+C;AAIrDgB,MAAAA,EAAE,EAAErB,YAJiD;AAKrDsB,MAAAA,UAAU,EAAErB;AALyC,KAAD,EAMnDE,qBANmD,CAA3B;AANM,GAAX,CAAxB;AAcD;;AAEDoB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC1B,oBAAoB,CAAC2B,SAArB,GAAiC;AACvE;AACA;AACA;AACA;AACAzB,EAAAA,kBAAkB,EAAER,SAAS,CAACkC,MALyC;AAMvE3B,EAAAA,YAAY,EAAEP,SAAS,CAACkC,MAN+C;AAOvEzB,EAAAA,gBAAgB,EAAET,SAAS,CAACmC,WAAV,CAAsBC,UAP+B;AAQvE1B,EAAAA,qBAAqB,EAAEV,SAAS,CAACqC,GARsC;AASvE1B,EAAAA,KAAK,EAAEX,SAAS,CAACkC,MAAV,CAAiBE,UAT+C;AAUvEtB,EAAAA,QAAQ,EAAEd,SAAS,CAACsC,IAVmD;AAWvE1B,EAAAA,IAAI,EAAEZ,SAAS,CAACuC,IAAV,CAAeH,UAXkD;AAYvEvB,EAAAA,MAAM,EAAEZ;AAZ+D,CAAzE,GAaI,KAAK,CAbT;AAcA,SAASK,oBAAT","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from '../../../hooks/utils/useGridApiContext';\nimport { GridMenu } from '../GridMenu';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const currentColumn = apiRef.current.getColumn(field);\n  const hideMenu = React.useCallback(event => {\n    // Prevent triggering the sorting\n    event.stopPropagation();\n    apiRef.current.hideColumnMenu();\n  }, [apiRef]);\n\n  if (!target) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${currentColumn.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClickAway: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      currentColumn: currentColumn,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };"]},"metadata":{},"sourceType":"module"}