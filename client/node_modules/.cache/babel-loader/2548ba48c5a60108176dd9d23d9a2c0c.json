{"ast":null,"code":"var _jsxFileName = \"/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Question from \"../components/Question\";\nimport StudentSideBar from \"../components/StudentSideBar\";\nimport quiz from \"../Helpers/quiz\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction QuizPage() {\n  _s();\n\n  const [questions, setQuestions] = useState(quiz);\n  const [currentQuestionId, setCurrentQuestionId] = useState(1);\n  const [score, setScore] = useState(0);\n  const currentQuestion = questions.find(q => q.id === currentQuestionId);\n  const quizzes = useSelector(state => state.quiz.questions);\n  const dispatch = useDispatch();\n\n  const handleQuestionAnswered = correct => {\n    if (currentQuestionId < questions.length) {\n      setCurrentQuestionId(currentQuestionId => currentQuestionId + 1);\n    } else {\n      setCurrentQuestionId(null);\n    }\n\n    if (correct) {\n      setScore(score => score + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StudentSideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuizContainer, {\n      children: [currentQuestion ? /*#__PURE__*/_jsxDEV(Question, {\n        question: currentQuestion,\n        onAnswered: handleQuestionAnswered\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Total Correct: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(NextButton, {\n        onClick: () => dispatch({\n          type: \"NEXT_Question\"\n        }),\n        children: \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(QuizPage, \"ksqyGYhyTlckW34qFTvyfGm50fY=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = QuizPage;\nexport default QuizPage;\nconst Container = styled.main`\n  display: flex;\n  color: #101f3c;\n`;\n_c2 = Container;\nconst QuizContainer = styled.section`\n  flex: 8;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n_c3 = QuizContainer;\nconst NextButton = styled.article`\n  margin: 0 auto;\n  color: #fff;\n  background: #0b0e21;\n  width: 300px;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 14px 75px;\n  text-transform: uppercase;\n  cursor: pointer;\n  text-align: center;\n`;\n_c4 = NextButton;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"QuizPage\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"QuizContainer\");\n$RefreshReg$(_c4, \"NextButton\");","map":{"version":3,"sources":["/home/moryno/Development/Project/Final-Project/Moringa-Hackerank/client/src/pages/QuizPage.js"],"names":["React","useState","useDispatch","useSelector","styled","Question","StudentSideBar","quiz","QuizPage","questions","setQuestions","currentQuestionId","setCurrentQuestionId","score","setScore","currentQuestion","find","q","id","quizzes","state","dispatch","handleQuestionAnswered","correct","length","type","Container","main","QuizContainer","section","NextButton","article"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACM,IAAD,CAA1C;AACA,QAAM,CAACI,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,CAAD,CAA1D;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMc,eAAe,GAAGN,SAAS,CAACO,IAAV,CAAgBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASP,iBAA/B,CAAxB;AACA,QAAMQ,OAAO,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACb,IAAN,CAAWE,SAAvB,CAA3B;AACA,QAAMY,QAAQ,GAAGnB,WAAW,EAA5B;;AAEA,QAAMoB,sBAAsB,GAAIC,OAAD,IAAa;AAC1C,QAAIZ,iBAAiB,GAAGF,SAAS,CAACe,MAAlC,EAA0C;AACxCZ,MAAAA,oBAAoB,CAAED,iBAAD,IAAuBA,iBAAiB,GAAG,CAA5C,CAApB;AACD,KAFD,MAEO;AACLC,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD;;AACD,QAAIW,OAAJ,EAAa;AACXT,MAAAA,QAAQ,CAAED,KAAD,IAAWA,KAAK,GAAG,CAApB,CAAR;AACD;AACF,GATD;;AAWA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,iBACGE,eAAe,gBACd,QAAC,QAAD;AACE,QAAA,QAAQ,EAAEA,eADZ;AAEE,QAAA,UAAU,EAAEO;AAFd;AAAA;AAAA;AAAA;AAAA,cADc,gBAMd;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,wCAAoBT,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBAPJ,eAYE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,MAAMQ,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAxCQjB,Q;UAKSL,W,EACCD,W;;;KANVM,Q;AA0CT,eAAeA,QAAf;AAEA,MAAMkB,SAAS,GAAGtB,MAAM,CAACuB,IAAK;AAC9B;AACA;AACA,CAHA;MAAMD,S;AAKN,MAAME,aAAa,GAAGxB,MAAM,CAACyB,OAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,a;AAQN,MAAME,UAAU,GAAG1B,MAAM,CAAC2B,OAAQ;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;MAAMD,U","sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Question from \"../components/Question\";\nimport StudentSideBar from \"../components/StudentSideBar\";\nimport quiz from \"../Helpers/quiz\";\n\nfunction QuizPage() {\n  const [questions, setQuestions] = useState(quiz);\n  const [currentQuestionId, setCurrentQuestionId] = useState(1);\n  const [score, setScore] = useState(0);\n  const currentQuestion = questions.find((q) => q.id === currentQuestionId);\n  const quizzes = useSelector((state) => state.quiz.questions);\n  const dispatch = useDispatch();\n\n  const handleQuestionAnswered = (correct) => {\n    if (currentQuestionId < questions.length) {\n      setCurrentQuestionId((currentQuestionId) => currentQuestionId + 1);\n    } else {\n      setCurrentQuestionId(null);\n    }\n    if (correct) {\n      setScore((score) => score + 1);\n    }\n  };\n\n  return (\n    <Container>\n      <StudentSideBar />\n      <QuizContainer>\n        {currentQuestion ? (\n          <Question\n            question={currentQuestion}\n            onAnswered={handleQuestionAnswered}\n          />\n        ) : (\n          <>\n            <h1>Game Over</h1>\n            <h2>Total Correct: {score}</h2>\n          </>\n        )}\n        <NextButton onClick={() => dispatch({ type: \"NEXT_Question\" })}>\n          Next Question\n        </NextButton>\n      </QuizContainer>\n    </Container>\n  );\n}\n\nexport default QuizPage;\n\nconst Container = styled.main`\n  display: flex;\n  color: #101f3c;\n`;\n\nconst QuizContainer = styled.section`\n  flex: 8;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst NextButton = styled.article`\n  margin: 0 auto;\n  color: #fff;\n  background: #0b0e21;\n  width: 300px;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 14px 75px;\n  text-transform: uppercase;\n  cursor: pointer;\n  text-align: center;\n`;\n"]},"metadata":{},"sourceType":"module"}